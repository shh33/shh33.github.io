<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>leaflet的使用</title>
      <link href="/2019/12/23/leaflet%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/12/23/leaflet%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<ol><li>需要引入几个必要的文件</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"/css/leaflet.css"</span>&gt;</span><br><span class="line">&lt;script src=<span class="string">"/js/jquery-1.11.3.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script src=<span class="string">"/js/leaflet-src.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script src=<span class="string">"/js/leaflet.label-src.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol start="2"><li>创建一个容器</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"map"</span> <span class="attr">id</span>=<span class="string">"map"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>编写js文件</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//切片图层地址</span></span><br><span class="line"><span class="keyword">var</span> serviceLink=<span class="string">"http://112.17.127.75:8008/arcgis/rest/services/"</span>;</span><br><span class="line"><span class="comment">//设置地图边界</span></span><br><span class="line"><span class="keyword">var</span> topleftbound = L.latLng(<span class="number">30.094642639160156</span>,<span class="number">122.05793380737305</span>),</span><br><span class="line">       rightbottombound = L.latLng(<span class="number">29.900836944580078</span>,<span class="number">122.30701446533203</span>),</span><br><span class="line">       bounds = L.latLngBounds(topleftbound,rightbottombound);</span><br><span class="line"><span class="comment">//地图初始化，设定地图最低层级</span></span><br><span class="line"><span class="keyword">var</span> _map;</span><br><span class="line">   _map= <span class="keyword">new</span> L.Map(<span class="string">'map'</span>,&#123;<span class="attr">zoom</span>: <span class="number">13</span> ,<span class="attr">closePopupOnClick</span>:<span class="literal">false</span>,<span class="attr">crs</span>:L.CRS.EPSG4326,<span class="attr">zoomAnimation</span>:<span class="literal">true</span>,<span class="attr">minZoom</span>:<span class="number">0</span>,<span class="attr">maxZoom</span>:<span class="number">18</span>,<span class="attr">zoomControl</span>:<span class="literal">false</span>,<span class="attr">maxBounds</span>:bounds&#125;);</span><br><span class="line"><span class="comment">//影像地图图层</span></span><br><span class="line"><span class="keyword">var</span> _baseImgLayer = <span class="keyword">new</span> L.tileLayer(<span class="string">'http://t&#123;s&#125;.tianditu.gov.cn/DataServer?T=img_c&amp;X=&#123;x&#125;&amp;Y=&#123;y&#125;&amp;L=&#123;z&#125;&amp;tk=434967d31e3d3f9d396b2f4c4250b023'</span>,&#123;<span class="attr">subdomains</span>:[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>]&#125;);</span><br><span class="line"><span class="comment">//文字地图图层</span></span><br><span class="line"><span class="keyword">var</span> _baseTxtLayer = <span class="keyword">new</span> L.tileLayer(<span class="string">'http://t&#123;s&#125;.tianditu.gov.cn/DataServer?T=cva_c&amp;X=&#123;x&#125;&amp;Y=&#123;y&#125;&amp;L=&#123;z&#125;&amp;tk=434967d31e3d3f9d396b2f4c4250b023'</span>,&#123;<span class="attr">subdomains</span>:[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>]&#125;);</span><br><span class="line"><span class="comment">//将图层加入到地图中去</span></span><br><span class="line">_baseImgLayer.addTo(_map);</span><br><span class="line">_baseTxtLayer.addTo(_map);</span><br><span class="line"><span class="comment">//设置地图中心点为北京</span></span><br><span class="line"><span class="comment">//_map.setView(new L.LatLng(39.905,116.399), 13);</span></span><br><span class="line"><span class="comment">//设置中心点封装方法</span></span><br><span class="line">setCenter(<span class="number">39.905</span>,<span class="number">116.399</span>,<span class="number">13</span>);</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">setCenter</span>(<span class="params">centerLat, centerLon,zoom</span>) </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (_map != <span class="literal">null</span>) _map.setView(<span class="keyword">new</span> L.LatLng(centerLat, centerLon),  zoom);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//加载背景切片图层</span></span><br><span class="line">   _bjLayer = <span class="keyword">new</span> L.tileLayer(serviceLink+<span class="string">'pinghuPolderArea/MapServer/tile/&#123;z&#125;/&#123;y&#125;/&#123;x&#125;'</span>, &#123;<span class="attr">subdomains</span>: [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]&#125;);</span><br><span class="line">   _bjLayer.addTo(_map);</span><br><span class="line"><span class="comment">//根据鼠标点击获取经纬度</span></span><br><span class="line">   _map.on(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(e);</span><br><span class="line">      <span class="built_in">console</span>.log(e.latlng.lat+<span class="string">"/"</span>+e.latlng.lng)</span><br><span class="line">   &#125;)</span><br><span class="line"><span class="comment">//featureGroup是LayerGroup的扩展，但多了鼠标事件和共享的弹出框方法。继承自ILayer接口。</span></span><br><span class="line">pointLayers = <span class="keyword">new</span> L.featureGroup([]);</span><br><span class="line">   _map.addLayer(pointLayers);</span><br><span class="line"><span class="comment">//添加图标</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">addIco</span> (<span class="params">lat,lng,text,data</span>) </span>&#123;</span><br><span class="line">       <span class="keyword">var</span> textIcon = L.divIcon(&#123;</span><br><span class="line">           html: <span class="string">"&lt;img class='reservoirlicon' id='"</span>+data+<span class="string">"' src='images/icon/水库.png'&gt;&lt;p class='lableText'&gt;"</span>+text+<span class="string">"&lt;/p&gt;"</span>,</span><br><span class="line">           className: <span class="string">'mcon'</span>,</span><br><span class="line">           iconSize:<span class="number">60</span></span><br><span class="line">       &#125;);</span><br><span class="line">       L.marker([lat,lng], &#123;<span class="attr">icon</span>: textIcon&#125;).addTo(pointLayers);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leaflet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leaflet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日一题-原生实现indexOf</title>
      <link href="/2019/10/30/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-%E5%8E%9F%E7%94%9F%E5%AE%9E%E7%8E%B0indexOf/"/>
      <url>/2019/10/30/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-%E5%8E%9F%E7%94%9F%E5%AE%9E%E7%8E%B0indexOf/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">indexOf</span>(<span class="params">arr, item</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">Array</span>.prototype.indexOf)&#123;   <span class="comment">//判断当前浏览器是否支持</span></span><br><span class="line">      <span class="keyword">return</span> arr.indexOf(item);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line">          <span class="keyword">if</span> (arr[i] === item)&#123;</span><br><span class="line">              <span class="keyword">return</span> i;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;     </span><br><span class="line">  <span class="keyword">return</span> <span class="number">-1</span>;     <span class="comment">//总是把return -1暴漏在最外层</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-router相关知识点</title>
      <link href="/2019/10/24/vue-router%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
      <url>/2019/10/24/vue-router%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h2 id="关于vue-router的一下知识点总结"><a href="#关于vue-router的一下知识点总结" class="headerlink" title="关于vue-router的一下知识点总结"></a>关于vue-router的一下知识点总结</h2><ol><li>关于路由跳转<ol><li>1 要点导包</li><li>2 配置路径</li></ol></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> Clithree <span class="keyword">from</span> <span class="string">'@/components/Clithree'</span></span><br><span class="line"><span class="keyword">import</span> Index <span class="keyword">from</span> <span class="string">'@/components/Index'</span></span><br><span class="line"><span class="keyword">import</span> Three <span class="keyword">from</span> <span class="string">'@/components/Three'</span></span><br><span class="line"></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/'</span>,</span><br><span class="line">      name: <span class="string">'Index'</span>,</span><br><span class="line">      component: Index</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/a'</span>,</span><br><span class="line">      name: <span class="string">'Clithree'</span>,</span><br><span class="line">      component: Clithree</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="2"><li>关于配置子路由</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">      path: <span class="string">'/a'</span>,</span><br><span class="line">      name: <span class="string">'Clithree'</span>,</span><br><span class="line">      component: Clithree,</span><br><span class="line">      children: [</span><br><span class="line">        &#123;</span><br><span class="line">          path: <span class="string">'/a1'</span>,</span><br><span class="line">          name: <span class="string">'Three'</span>,</span><br><span class="line">          component: Three</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><p>页面上跳转</p><p>使用<code>touter-link</code>标签</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/"</span>&gt;</span>index<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li><p>关于地址的研究</p><p>4.1 去除#号（微信支付相关的地方#会冲突 但是页面不存在会报404）</p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  mode: <span class="string">'history'</span>, <span class="comment">//hash</span></span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/'</span>,</span><br><span class="line">      name: <span class="string">'Index'</span>,</span><br><span class="line">      component: Index</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/a'</span>,</span><br><span class="line">      name: <span class="string">'Clithree'</span>,</span><br><span class="line">      component: Clithree,</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="/images/1571905361513.png" alt="1571905361513"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>关于bootstrap-table的使用</title>
      <link href="/2019/10/17/%E5%85%B3%E4%BA%8Ebootstrap-table%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/10/17/%E5%85%B3%E4%BA%8Ebootstrap-table%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><ol><li>需要注意必需文件引入顺序</li><li>注意jQuery版本会导致图标不显示的问题</li><li>中文table要放在bootstrap-tablew.js文件下面</li></ol></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;link rel="stylesheet" href="./css/bootstrap.css"&gt;</span></span><br><span class="line"><span class="comment">&lt;link rel="stylesheet" href="./bootstrap-table-master/dist/bootstrap-table.min.css"&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css"</span> <span class="attr">integrity</span>=<span class="string">"sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://use.fontawesome.com/releases/v5.6.3/css/all.css"</span> <span class="attr">integrity</span>=<span class="string">"sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://unpkg.com/bootstrap-table@1.15.3/dist/bootstrap-table.min.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">#table1&#123;</span><br><span class="line">    width: 500px;</span><br><span class="line">    /* height: 800px; */</span><br><span class="line">    border: 1px solid #f40;</span><br><span class="line">&#125;</span><br><span class="line">#table1 &gt; thead th &#123;</span><br><span class="line">    padding: 0;</span><br><span class="line">    margin: 0;</span><br><span class="line">    background-color: #d9edf7;</span><br><span class="line">&#125;</span><br><span class="line">#table1 tr:nth-child(even)&#123;</span><br><span class="line">background:#f4f8fb;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"page-table"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"table1"</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"fixed-table-pagination"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pull-right pagination-detail"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"pagination-info"</span>&gt;</span>显示第 1 到第 <span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 条记录，总共<span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 条记录<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;script src="./js/jquery-1.12.4.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;script src="./js/bootstrap.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;script src="./bootstrap-table-master/dist/bootstrap-table.js"&gt;&lt;/script&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;script src="./bootstrap-table-master/dist/locale/bootstrap-table-zh-CN.js"&gt;&lt;/script&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://code.jquery.com/jquery-3.3.1.min.js"</span> <span class="attr">integrity</span>=<span class="string">"sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.6/umd/popper.min.js"</span> <span class="attr">integrity</span>=<span class="string">"sha384-wHAiFfRlMFy6i5SRaxvfOCifBUQy1xHdJ/yoi7FRNXMRBu5WHdZYu1hA6ZOblgut"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/js/bootstrap.min.js"</span> <span class="attr">integrity</span>=<span class="string">"sha384-B0UglyR+jN6CkvvICOB2joaf5I4l3gm9GU6Hc1og6Ls7i6U/mkkaduKaBhlAXv9k"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/bootstrap-table@1.15.3/dist/bootstrap-table.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./bootstrap-table-master/dist/locale/bootstrap-table-zh-CN.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">//表格</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> data=[&#123;</span></span><br><span class="line"><span class="javascript">        <span class="string">"task"</span>:<span class="string">"水库日常巡查"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"problemType"</span>:<span class="string">"电话举报"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"arranger"</span>:<span class="string">"陈超"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"patrols"</span>:<span class="string">"文湘"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"beginTime"</span>:<span class="string">"2018-08-26"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"endTime"</span>:<span class="string">"2018-08-27"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"taskState"</span>:<span class="string">"已完成"</span></span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line"><span class="javascript">        <span class="string">"task"</span>:<span class="string">"水库日常巡查"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"problemType"</span>:<span class="string">"电话举报"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"arranger"</span>:<span class="string">"陈超"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"patrols"</span>:<span class="string">"文湘"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"beginTime"</span>:<span class="string">"2018-08-26"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"endTime"</span>:<span class="string">"2018-08-27"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"taskState"</span>:<span class="string">"已完成"</span></span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line"><span class="javascript">        <span class="string">"task"</span>:<span class="string">"水库日常巡查"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"problemType"</span>:<span class="string">"电话举报"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"arranger"</span>:<span class="string">"陈超"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"patrols"</span>:<span class="string">"文湘"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"beginTime"</span>:<span class="string">"2018-08-26"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"endTime"</span>:<span class="string">"2018-08-27"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"taskState"</span>:<span class="string">"已完成"</span></span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line"><span class="javascript">        <span class="string">"task"</span>:<span class="string">"水库日常巡查"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"problemType"</span>:<span class="string">"电话举报"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"arranger"</span>:<span class="string">"陈超"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"patrols"</span>:<span class="string">"文湘"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"beginTime"</span>:<span class="string">"2018-08-26"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"endTime"</span>:<span class="string">"2018-08-27"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"taskState"</span>:<span class="string">"未完成"</span></span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line"><span class="javascript">        <span class="string">"task"</span>:<span class="string">"水库日常巡查"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"problemType"</span>:<span class="string">"电话举报"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"arranger"</span>:<span class="string">"陈超"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"patrols"</span>:<span class="string">"文湘"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"beginTime"</span>:<span class="string">"2018-08-26"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"endTime"</span>:<span class="string">"2018-08-27"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"taskState"</span>:<span class="string">"已完成"</span></span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line"><span class="javascript">        <span class="string">"task"</span>:<span class="string">"水库日常巡查"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"problemType"</span>:<span class="string">"电话举报"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"arranger"</span>:<span class="string">"陈超"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"patrols"</span>:<span class="string">"文湘"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"beginTime"</span>:<span class="string">"2018-08-26"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"endTime"</span>:<span class="string">"2018-08-27"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"taskState"</span>:<span class="string">"未完成"</span></span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line"><span class="javascript">        <span class="string">"task"</span>:<span class="string">"水库日常巡查"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"problemType"</span>:<span class="string">"电话举报"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"arranger"</span>:<span class="string">"陈超"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"patrols"</span>:<span class="string">"文湘"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"beginTime"</span>:<span class="string">"2018-08-26"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"endTime"</span>:<span class="string">"2018-08-27"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"taskState"</span>:<span class="string">"已完成"</span></span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line"><span class="javascript">        <span class="string">"task"</span>:<span class="string">"水库日常巡查"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"problemType"</span>:<span class="string">"电话举报"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"arranger"</span>:<span class="string">"陈超"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"patrols"</span>:<span class="string">"文湘"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"beginTime"</span>:<span class="string">"2018-08-26"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"endTime"</span>:<span class="string">"2018-08-27"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"taskState"</span>:<span class="string">"已完成"</span></span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line"><span class="javascript">        <span class="string">"task"</span>:<span class="string">"水库日常巡查"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"problemType"</span>:<span class="string">"电话举报"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"arranger"</span>:<span class="string">"陈超"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"patrols"</span>:<span class="string">"文湘"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"beginTime"</span>:<span class="string">"2018-08-26"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"endTime"</span>:<span class="string">"2018-08-27"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"taskState"</span>:<span class="string">"已完成"</span></span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line"><span class="javascript">        <span class="string">"task"</span>:<span class="string">"水库日常巡查"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"problemType"</span>:<span class="string">"电话举报"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"arranger"</span>:<span class="string">"陈超"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"patrols"</span>:<span class="string">"张三"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"beginTime"</span>:<span class="string">"2018-08-26"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"endTime"</span>:<span class="string">"2018-08-27"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"taskState"</span>:<span class="string">"已完成"</span></span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line"><span class="javascript">        <span class="string">"task"</span>:<span class="string">"水库日常巡查"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"problemType"</span>:<span class="string">"电话举报"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"arranger"</span>:<span class="string">"陈超"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"patrols"</span>:<span class="string">"文湘"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"beginTime"</span>:<span class="string">"2018-08-26"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"endTime"</span>:<span class="string">"2018-08-27"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"taskState"</span>:<span class="string">"已完成"</span></span></span><br><span class="line">    &#125;];</span><br><span class="line"><span class="javascript">    $(<span class="string">".pagination-info i"</span>).text(data.length);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">loadTableData</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#table1"</span>).bootstrapTable(<span class="string">"destroy"</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#table1"</span>).bootstrapTable(&#123;</span></span><br><span class="line"><span class="javascript">            url:<span class="string">""</span>,             <span class="comment">//请求后台的路径</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// ajaxOptions:&#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     headers: &#123;"authorization": $localStorage("token")||getQueryString("token")&#125;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// &#125;,</span></span></span><br><span class="line"><span class="javascript">            method: <span class="string">'get'</span>,      <span class="comment">//请求方式</span></span></span><br><span class="line"><span class="javascript">            striped: <span class="literal">false</span>,      <span class="comment">//是否显示行间隔色</span></span></span><br><span class="line"><span class="javascript">            showExport: <span class="literal">false</span>, </span></span><br><span class="line"><span class="javascript">            exportDataType: <span class="string">"all"</span>,</span></span><br><span class="line"><span class="javascript">            showLoading: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">            toolbar: <span class="string">'#toolbar'</span>,            <span class="comment">//工具按钮用哪个容器</span></span></span><br><span class="line"><span class="javascript">            toolbarAlign: <span class="string">'left'</span>,</span></span><br><span class="line">            </span><br><span class="line"><span class="javascript">            pagination: <span class="literal">true</span>,               <span class="comment">//是否显示分页</span></span></span><br><span class="line"><span class="javascript">            paginationLoop: <span class="literal">true</span>,           <span class="comment">//是否无限循环</span></span></span><br><span class="line"><span class="javascript">            paginationHAlign: <span class="string">'right'</span>,      <span class="comment">//分页位置</span></span></span><br><span class="line">            </span><br><span class="line"><span class="javascript">            sortable: <span class="literal">true</span>,                 <span class="comment">//是否启用排序</span></span></span><br><span class="line"><span class="javascript">            sortOrder: <span class="string">"asc"</span>,               <span class="comment">//排序方式</span></span></span><br><span class="line"><span class="javascript">            sidePagination: <span class="string">"client"</span>,       <span class="comment">//分页方式：client客户端分页，server服务端分页（*）</span></span></span><br><span class="line"><span class="javascript">            pageNumber:<span class="number">1</span>,                   <span class="comment">//初始化加载第一页，默认第一页</span></span></span><br><span class="line"><span class="javascript">            pageSize:  <span class="number">5</span>,                   <span class="comment">//每页的记录行数（*）</span></span></span><br><span class="line"><span class="javascript">            pageList:  [<span class="number">2</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">15</span>],      <span class="comment">//可供选择的每页的行数（*）</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// paginationDetailHAlign:' hidden', //</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            search:<span class="literal">true</span>,                <span class="comment">//是否显示表格搜索</span></span></span><br><span class="line"><span class="javascript">            searchOnEnterKey:<span class="literal">true</span>,      <span class="comment">//是否需要点击enter显示数据</span></span></span><br><span class="line"><span class="javascript">            strictSearch: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">            showHeader:<span class="literal">true</span>,            <span class="comment">//是否显示表头</span></span></span><br><span class="line"><span class="javascript">            showColumns: <span class="literal">true</span>,          <span class="comment">//是否显示所有的列</span></span></span><br><span class="line"><span class="javascript">            showRefresh: <span class="literal">true</span>,          <span class="comment">//显示刷新按钮</span></span></span><br><span class="line"><span class="javascript">            minimumCountColumns: <span class="number">2</span>,     <span class="comment">//最少允许的列数</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">// height: 400,        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度</span></span></span><br><span class="line">     </span><br><span class="line"><span class="javascript">            showToggle:<span class="literal">true</span>,    <span class="comment">//是否显示详细视图和列表</span></span></span><br><span class="line"><span class="javascript">            cardView: <span class="literal">false</span>,    <span class="comment">//是否显示详细视图</span></span></span><br><span class="line"><span class="javascript">            detailView: <span class="literal">true</span>,   <span class="comment">//是否显示父子表</span></span></span><br><span class="line"><span class="javascript">            clickToSelect:<span class="literal">true</span>, <span class="comment">//是否启用点击选中行</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            exportDataType: <span class="string">"selected"</span>,        <span class="comment">//导出checkbox选中的行数</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">// paginationFirstText: "首页",</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// paginationPreText: '上一页',</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// paginationNextText: '下一页',</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// paginationLastText: '最后一页',</span></span></span><br><span class="line">            </span><br><span class="line">            data:data,</span><br><span class="line"><span class="javascript">            <span class="comment">//得到查询的参数</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// queryParams : function (params) &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         var temp = &#123;   </span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//             rows: params.limit,                         //页面大小</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//             page: (params.offset / params.limit) + 1,   //页码</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//             sort: params.sort,      //排序列名  </span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//             sortOrder: params.order //排位命令（desc，asc） </span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         &#125;;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         return temp;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     &#125;,</span></span></span><br><span class="line">            columns:[&#123;</span><br><span class="line"><span class="javascript">                    checkbox: <span class="literal">true</span>,  </span></span><br><span class="line"><span class="javascript">                    visible: <span class="literal">true</span>                  <span class="comment">//是否显示复选框  </span></span></span><br><span class="line">            &#125;,&#123;</span><br><span class="line"><span class="javascript">                field: <span class="string">'task'</span>,</span></span><br><span class="line"><span class="javascript">                title: <span class="string">'任务名称'</span></span></span><br><span class="line">            &#125;,&#123;</span><br><span class="line"><span class="javascript">                field: <span class="string">'problemType'</span>,</span></span><br><span class="line"><span class="javascript">                title: <span class="string">'问题类型'</span>,</span></span><br><span class="line"><span class="javascript">                width:<span class="string">'12%'</span></span></span><br><span class="line">            &#125;,&#123;</span><br><span class="line"><span class="javascript">                field: <span class="string">'arranger'</span>,</span></span><br><span class="line"><span class="javascript">                title: <span class="string">'安排人'</span>,</span></span><br><span class="line"><span class="javascript">                width:<span class="string">'12%'</span></span></span><br><span class="line">            &#125;,&#123;</span><br><span class="line"><span class="javascript">                field: <span class="string">'patrols'</span>,</span></span><br><span class="line"><span class="javascript">                title: <span class="string">'巡查人员'</span>,</span></span><br><span class="line"><span class="javascript">                width:<span class="string">'12%'</span></span></span><br><span class="line">            &#125;,&#123;</span><br><span class="line"><span class="javascript">                field: <span class="string">'beginTime'</span>,</span></span><br><span class="line"><span class="javascript">                title: <span class="string">'开始时间'</span>,</span></span><br><span class="line"><span class="javascript">                width:<span class="string">'12%'</span>,</span></span><br><span class="line"><span class="javascript">                height:<span class="string">'46px'</span></span></span><br><span class="line">            &#125;,&#123;</span><br><span class="line"><span class="javascript">                field: <span class="string">'endTime'</span>,</span></span><br><span class="line"><span class="javascript">                title: <span class="string">'截止时间'</span>,</span></span><br><span class="line"><span class="javascript">                width:<span class="string">'12%'</span>,</span></span><br><span class="line"><span class="javascript">                formatter:<span class="function"><span class="keyword">function</span>(<span class="params">value,row,index</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> html = <span class="string">""</span>;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span>(index == <span class="number">3</span> || index == <span class="number">7</span>) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">var</span> html = <span class="string">'&lt;div class="show-colos"&gt;'</span>+value+<span class="string">'&lt;/div&gt;'</span>;</span></span><br><span class="line"><span class="javascript">                    &#125;<span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">var</span> html = value;</span></span><br><span class="line">                    &#125;</span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> html;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,&#123;</span><br><span class="line"><span class="javascript">                    field: <span class="string">'taskState'</span>,</span></span><br><span class="line"><span class="javascript">                title: <span class="string">'任务状态'</span>,</span></span><br><span class="line"><span class="javascript">                width:<span class="string">'12%'</span>,</span></span><br><span class="line"><span class="javascript">                formatter:<span class="function"><span class="keyword">function</span>(<span class="params">value,row,index</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> html = <span class="string">""</span>;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span>(value == <span class="string">"已完成"</span>) &#123;</span></span><br><span class="line"><span class="xml">                        var html = '<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"task-finish"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"finish-ico"</span>"&gt;</span><span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>'+value+'<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>';</span></span><br><span class="line"><span class="javascript">                    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(value == <span class="string">"未完成"</span>)&#123;</span></span><br><span class="line"><span class="xml">                        var html = '<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"task-unfinish"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"unfinish-ico "</span> <span class="attr">onclick</span>=<span class="string">"showdetails()"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>'+value+'<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>';</span></span><br><span class="line">                    &#125;</span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> html;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;],</span><br><span class="line"><span class="javascript">            onLoadSuccess: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span></span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            onLoadError: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    loadTableData();</span><br><span class="line"><span class="javascript">    $(<span class="string">'table1'</span>).bootstrapTable(<span class="string">'refresh'</span>); <span class="comment">//删除数据自动更新</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> bootstrap </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bootstrap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于echarts的使用</title>
      <link href="/2019/10/17/%E5%85%B3%E4%BA%8Eecharts%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/10/17/%E5%85%B3%E4%BA%8Eecharts%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="关于Echarts的使用"><a href="#关于Echarts的使用" class="headerlink" title="关于Echarts的使用"></a>关于Echarts的使用</h1><p><strong>主要的及格配置项</strong></p><blockquote><p>title  <strong>图表标题</strong></p><p>tooltip <strong>提示框</strong></p><p>legend <strong>图例</strong></p><p>grid</p><p>xAxis <strong>X轴样式</strong></p><p>yAxis <strong>Y轴样式</strong></p><p>series <strong>配置</strong></p></blockquote><h3 id="title-图表标题"><a href="#title-图表标题" class="headerlink" title="title 图表标题"></a>title 图表标题</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">title: &#123;</span><br><span class="line">        x: <span class="string">'left'</span>,                 <span class="comment">// 水平安放位置，默认为左对齐，可选为：</span></span><br><span class="line">                                   <span class="comment">// 'center' ¦ 'left' ¦ 'right'</span></span><br><span class="line">                                   <span class="comment">// ¦ &#123;number&#125;（x坐标，单位px）</span></span><br><span class="line">        y: <span class="string">'top'</span>,                  <span class="comment">// 垂直安放位置，默认为全图顶端，可选为：</span></span><br><span class="line">                                   <span class="comment">// 'top' ¦ 'bottom' ¦ 'center'</span></span><br><span class="line">                                   <span class="comment">// ¦ &#123;number&#125;（y坐标，单位px）</span></span><br><span class="line">        <span class="comment">//textAlign: null          // 水平对齐方式，默认根据x设置自动调整</span></span><br><span class="line">        backgroundColor: <span class="string">'rgba(0,0,0,0)'</span>,</span><br><span class="line">        borderColor: <span class="string">'#ccc'</span>,       <span class="comment">// 标题边框颜色</span></span><br><span class="line">        borderWidth: <span class="number">0</span>,            <span class="comment">// 标题边框线宽，单位px，默认为0（无边框）</span></span><br><span class="line">        padding: <span class="number">5</span>,                <span class="comment">// 标题内边距，单位px，默认各方向内边距为5，</span></span><br><span class="line">                                   <span class="comment">// 接受数组分别设定上右下左边距，同css</span></span><br><span class="line">        itemGap: <span class="number">10</span>,               <span class="comment">// 主副标题纵向间隔，单位px，默认为10，</span></span><br><span class="line">        textStyle: &#123;</span><br><span class="line">            fontSize: <span class="number">18</span>,</span><br><span class="line">            fontWeight: <span class="string">'bolder'</span>,</span><br><span class="line">            color: <span class="string">'#333'</span>          <span class="comment">// 主标题文字颜色</span></span><br><span class="line">        &#125;,</span><br><span class="line">        subtextStyle: &#123;</span><br><span class="line">            color: <span class="string">'#aaa'</span>          <span class="comment">// 副标题文字颜色</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><h3 id="tooltip-提示框"><a href="#tooltip-提示框" class="headerlink" title="tooltip 提示框"></a>tooltip 提示框</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 提示框</span></span><br><span class="line">    tooltip: &#123;</span><br><span class="line">        trigger: <span class="string">'item'</span>,           <span class="comment">// item只会显示该点的数据，axis显示该列下所有坐标轴所对应的数据</span></span><br><span class="line">        showDelay: <span class="number">20</span>,             <span class="comment">// 显示延迟，添加显示延迟可以避免频繁切换，单位ms</span></span><br><span class="line">        hideDelay: <span class="number">100</span>,            <span class="comment">// 隐藏延迟，单位ms</span></span><br><span class="line">        transitionDuration : <span class="number">0.4</span>,  <span class="comment">// 动画变换时间，单位s</span></span><br><span class="line">        backgroundColor: <span class="string">'rgba(0,0,0,0.7)'</span>,     <span class="comment">// 提示背景颜色，默认为透明度为0.7的黑色</span></span><br><span class="line">        borderColor: <span class="string">'#333'</span>,       <span class="comment">// 提示边框颜色</span></span><br><span class="line">        borderRadius: <span class="number">4</span>,           <span class="comment">// 提示边框圆角，单位px，默认为4</span></span><br><span class="line">        borderWidth: <span class="number">0</span>,            <span class="comment">// 提示边框线宽，单位px，默认为0（无边框）</span></span><br><span class="line">        padding: <span class="number">5</span>,                <span class="comment">// 提示内边距，单位px，默认各方向内边距为5，</span></span><br><span class="line">                                   <span class="comment">// 接受数组分别设定上右下左边距，同css</span></span><br><span class="line">        axisPointer : &#123;            <span class="comment">// 坐标轴指示器，坐标轴触发有效</span></span><br><span class="line">            type : <span class="string">'line'</span>,         <span class="comment">// 默认为直线，可选为：'line' | 'shadow'</span></span><br><span class="line">            lineStyle : &#123;          <span class="comment">// 直线指示器样式设置</span></span><br><span class="line">                color: <span class="string">'#48b'</span>,</span><br><span class="line">                width: <span class="number">2</span>,</span><br><span class="line">                type: <span class="string">'solid'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            shadowStyle : &#123;                       <span class="comment">// 阴影指示器样式设置</span></span><br><span class="line">                width: <span class="string">'auto'</span>,                   <span class="comment">// 阴影大小</span></span><br><span class="line">                color: <span class="string">'rgba(150,150,150,0.3)'</span>  <span class="comment">// 阴影颜色</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        textStyle: &#123;</span><br><span class="line">            color: <span class="string">'#fff'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><h3 id="legend-图例"><a href="#legend-图例" class="headerlink" title="legend 图例"></a>legend 图例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">legend: &#123;</span><br><span class="line">          orient: <span class="string">'horizontal'</span>,      <span class="comment">// 布局方式，默认为水平布局，可选为：</span></span><br><span class="line">                                     <span class="comment">// 'horizontal' ¦ 'vertical'</span></span><br><span class="line">          x: <span class="string">'center'</span>,               <span class="comment">// 水平安放位置，默认为全图居中，可选为：</span></span><br><span class="line">                                     <span class="comment">// 'center' ¦ 'left' ¦ 'right'</span></span><br><span class="line">                                     <span class="comment">// ¦ &#123;number&#125;（x坐标，单位px）</span></span><br><span class="line">          y: <span class="string">'top'</span>,                  <span class="comment">// 垂直安放位置，默认为全图顶端，可选为：</span></span><br><span class="line">                                     <span class="comment">// 'top' ¦ 'bottom' ¦ 'center'</span></span><br><span class="line">                                     <span class="comment">// ¦ &#123;number&#125;（y坐标，单位px）</span></span><br><span class="line">         backgroundColor: <span class="string">'rgba(0,0,0,0)'</span>,</span><br><span class="line">         borderColor: <span class="string">'#ccc'</span>,       <span class="comment">// 图例边框颜色</span></span><br><span class="line">         borderWidth: <span class="number">0</span>,            <span class="comment">// 图例边框线宽，单位px，默认为0（无边框）</span></span><br><span class="line">         padding: <span class="number">5</span>,                <span class="comment">// 图例内边距单位px，默认各方向内边距为5，</span></span><br><span class="line">                                    <span class="comment">// 接受数组分别设定上右下左边距，同css</span></span><br><span class="line">         itemGap: <span class="number">10</span>,               <span class="comment">// 各个item之间的间隔，单位px，默认为10，</span></span><br><span class="line">                                    <span class="comment">// 横向布局时为水平间隔，纵向布局时为纵向间隔</span></span><br><span class="line">         itemWidth: <span class="number">20</span>,             <span class="comment">// 图例图形宽度</span></span><br><span class="line">         itemHeight: <span class="number">14</span>,            <span class="comment">// 图例图形高度</span></span><br><span class="line">         textStyle: &#123;</span><br><span class="line">             color: <span class="string">'#333'</span>          <span class="comment">// 图例文字颜色</span></span><br><span class="line">         &#125;</span><br><span class="line">     &#125;,</span><br></pre></td></tr></table></figure><h3 id="Axis-分为category和value"><a href="#Axis-分为category和value" class="headerlink" title="Axis 分为category和value"></a>Axis 分为category和value</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">categoryAxis: &#123;</span><br><span class="line">          position: <span class="string">'bottom'</span>,    <span class="comment">// 位置</span></span><br><span class="line">          nameLocation: <span class="string">'end'</span>,   <span class="comment">// 坐标轴名字位置，支持'start' | 'end'</span></span><br><span class="line">          boundaryGap: <span class="literal">true</span>,     <span class="comment">// 类目起始和结束两端空白策略</span></span><br><span class="line">          axisLine: &#123;            <span class="comment">// 坐标轴线</span></span><br><span class="line">              show: <span class="literal">true</span>,        <span class="comment">// 默认显示，属性show控制显示与否</span></span><br><span class="line">              lineStyle: &#123;       <span class="comment">// 属性lineStyle控制线条样式</span></span><br><span class="line">                  color: <span class="string">'#48b'</span>,</span><br><span class="line">                  width: <span class="number">2</span>,      <span class="comment">//设置为0也是不现在坐标线</span></span><br><span class="line">                 type: <span class="string">'solid'</span></span><br><span class="line">             &#125;</span><br><span class="line">         &#125;,         <span class="attr">axisTick</span>: &#123;            <span class="comment">// 坐标轴小标记</span></span><br><span class="line">             show: <span class="literal">true</span>,       <span class="comment">// 属性show控制显示与否，默认不显示</span></span><br><span class="line">             interval: <span class="string">'auto'</span>,</span><br><span class="line">             <span class="comment">// onGap: null,</span></span><br><span class="line">             inside : <span class="literal">false</span>,    <span class="comment">// 控制小标记是否在grid里 </span></span><br><span class="line">             length :<span class="number">5</span>,         <span class="comment">// 属性length控制线长</span></span><br><span class="line">             lineStyle: &#123;       <span class="comment">// 属性lineStyle控制线条样式</span></span><br><span class="line">                 color: <span class="string">'#333'</span>,</span><br><span class="line">                 width: <span class="number">1</span></span><br><span class="line">             &#125;</span><br><span class="line">         &#125;,</span><br><span class="line">         axisLabel: &#123;           <span class="comment">// 坐标轴文本标签，详见axis.axisLabel</span></span><br><span class="line">             show: <span class="literal">true</span>,</span><br><span class="line">             interval: <span class="string">'auto'</span>,</span><br><span class="line">             rotate: <span class="number">0</span>,</span><br><span class="line">             margin: <span class="number">8</span>,</span><br><span class="line">             <span class="comment">// formatter: null,</span></span><br><span class="line">             textStyle: &#123;       <span class="comment">// 其余属性默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                 color: <span class="string">'#333'</span></span><br><span class="line">             &#125;</span><br><span class="line">         &#125;,</span><br><span class="line">         splitLine: &#123;           <span class="comment">// 分隔线</span></span><br><span class="line">             show: <span class="literal">true</span>,        <span class="comment">// 默认显示，属性show控制显示与否</span></span><br><span class="line">             <span class="comment">// onGap: null,</span></span><br><span class="line">             lineStyle: &#123;       <span class="comment">// 属性lineStyle（详见lineStyle）控制线条样式</span></span><br><span class="line">                 color: [<span class="string">'#ccc'</span>],</span><br><span class="line">                 width: <span class="number">1</span>,</span><br><span class="line">                 type: <span class="string">'solid'</span></span><br><span class="line">             &#125;</span><br><span class="line">         &#125;,</span><br><span class="line">         splitArea: &#123;           <span class="comment">// 分隔区域</span></span><br><span class="line">             show: <span class="literal">false</span>,       <span class="comment">// 默认不显示，属性show控制显示与否</span></span><br><span class="line">             <span class="comment">// onGap: null,</span></span><br><span class="line">             areaStyle: &#123;       <span class="comment">// 属性areaStyle（详见areaStyle）控制区域样式</span></span><br><span class="line">                 color: [<span class="string">'rgba(250,250,250,0.3)'</span>,<span class="string">'rgba(200,200,200,0.3)'</span>]</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;,</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">valueAxis: &#123;</span><br><span class="line">          position: <span class="string">'left'</span>,      <span class="comment">// 位置</span></span><br><span class="line">          nameLocation: <span class="string">'end'</span>,   <span class="comment">// 坐标轴名字位置，支持'start' | 'end'</span></span><br><span class="line">          nameTextStyle: &#123;&#125;,     <span class="comment">// 坐标轴文字样式，默认取全局样式</span></span><br><span class="line">          boundaryGap: [<span class="number">0</span>, <span class="number">0</span>],   <span class="comment">// 数值起始和结束两端空白策略</span></span><br><span class="line">          splitNumber: <span class="number">5</span>,        <span class="comment">// 分割段数，默认为5</span></span><br><span class="line">          axisLine: &#123;            <span class="comment">// 坐标轴线</span></span><br><span class="line">              show: <span class="literal">true</span>,        <span class="comment">// 默认显示，属性show控制显示与否</span></span><br><span class="line">              lineStyle: &#123;       <span class="comment">// 属性lineStyle控制线条样式</span></span><br><span class="line">                 color: <span class="string">'#48b'</span>,</span><br><span class="line">                 width: <span class="number">2</span>,</span><br><span class="line">                 type: <span class="string">'solid'</span></span><br><span class="line">             &#125;</span><br><span class="line">         &#125;,</span><br><span class="line">         axisTick: &#123;            <span class="comment">// 坐标轴小标记</span></span><br><span class="line">             show: <span class="literal">false</span>,       <span class="comment">// 属性show控制显示与否，默认不显示</span></span><br><span class="line">             inside : <span class="literal">false</span>,    <span class="comment">// 控制小标记是否在grid里 </span></span><br><span class="line">             length :<span class="number">5</span>,         <span class="comment">// 属性length控制线长</span></span><br><span class="line">             lineStyle: &#123;       <span class="comment">// 属性lineStyle控制线条样式</span></span><br><span class="line">                 color: <span class="string">'#333'</span>,</span><br><span class="line">                 width: <span class="number">1</span></span><br><span class="line">             &#125;</span><br><span class="line">         &#125;,</span><br><span class="line">         axisLabel: &#123;           <span class="comment">// 坐标轴文本标签，详见axis.axisLabel</span></span><br><span class="line">             show: <span class="literal">true</span>,</span><br><span class="line">             rotate: <span class="number">0</span>,</span><br><span class="line">             margin: <span class="number">8</span>,</span><br><span class="line">             <span class="comment">// formatter: null,</span></span><br><span class="line">             textStyle: &#123;       <span class="comment">// 其余属性默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                 color: <span class="string">'#333'</span></span><br><span class="line">             &#125;</span><br><span class="line">         &#125;,</span><br><span class="line">         splitLine: &#123;           <span class="comment">// 分隔线</span></span><br><span class="line">             show: <span class="literal">true</span>,        <span class="comment">// 默认显示，属性show控制显示与否</span></span><br><span class="line">             lineStyle: &#123;       <span class="comment">// 属性lineStyle（详见lineStyle）控制线条样式</span></span><br><span class="line">                 color: [<span class="string">'#ccc'</span>],</span><br><span class="line">                 width: <span class="number">1</span>,</span><br><span class="line">                 type: <span class="string">'solid'</span></span><br><span class="line">             &#125;</span><br><span class="line">         &#125;,</span><br><span class="line">         splitArea: &#123;           <span class="comment">// 分隔区域</span></span><br><span class="line">             show: <span class="literal">false</span>,       <span class="comment">// 默认不显示，属性show控制显示与否</span></span><br><span class="line">             areaStyle: &#123;       <span class="comment">// 属性areaStyle（详见areaStyle）控制区域样式</span></span><br><span class="line">                 color: [<span class="string">'rgba(250,250,250,0.3)'</span>,<span class="string">'rgba(200,200,200,0.3)'</span>]</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;,</span><br><span class="line"></span><br><span class="line">     polar : &#123;</span><br><span class="line">         center : [<span class="string">'50%'</span>, <span class="string">'50%'</span>],    <span class="comment">// 默认全局居中</span></span><br><span class="line">         radius : <span class="string">'75%'</span>,</span><br><span class="line">         startAngle : <span class="number">90</span>,</span><br><span class="line">         splitNumber : <span class="number">5</span>,</span><br><span class="line">         name : &#123;</span><br><span class="line">             show: <span class="literal">true</span>,</span><br><span class="line">             textStyle: &#123;       <span class="comment">// 其余属性默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                 color: <span class="string">'#333'</span></span><br><span class="line">            &#125;</span><br><span class="line">         &#125;,</span><br><span class="line">         axisLine: &#123;            <span class="comment">// 坐标轴线</span></span><br><span class="line">             show: <span class="literal">true</span>,        <span class="comment">// 默认显示，属性show控制显示与否</span></span><br><span class="line">             lineStyle: &#123;       <span class="comment">// 属性lineStyle控制线条样式</span></span><br><span class="line">                 color: <span class="string">'#ccc'</span>,</span><br><span class="line">                 width: <span class="number">1</span>, </span><br><span class="line">                 type: <span class="string">'solid'</span></span><br><span class="line">             &#125;</span><br><span class="line">         &#125;,</span><br><span class="line">         axisLabel: &#123;           <span class="comment">// 坐标轴文本标签，详见axis.axisLabel</span></span><br><span class="line">             show: <span class="literal">false</span>,</span><br><span class="line">             textStyle: &#123;       <span class="comment">// 其余属性默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                 color: <span class="string">'#333'</span></span><br><span class="line">             &#125;</span><br><span class="line">         &#125;,</span><br><span class="line">         splitArea : &#123;</span><br><span class="line">             show : <span class="literal">true</span>,</span><br><span class="line">             areaStyle : &#123;</span><br><span class="line">                 color: [<span class="string">'rgba(250,250,250,0.3)'</span>,<span class="string">'rgba(200,200,200,0.3)'</span>]</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;,</span><br><span class="line">         splitLine : &#123;</span><br><span class="line">             show : <span class="literal">true</span>,</span><br><span class="line">             lineStyle : &#123;</span><br><span class="line">                 width : <span class="number">1</span>,</span><br><span class="line">                 color : <span class="string">'#ccc'</span></span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><h3 id="饼图"><a href="#饼图" class="headerlink" title="饼图"></a>饼图</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//饼图</span></span><br><span class="line">    use_chart();</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">use_chart</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'name_chart'</span>));<span class="comment">//绑定盒子ID</span></span><br><span class="line">        <span class="keyword">var</span> Data = [</span><br><span class="line">            &#123;<span class="attr">value</span>:<span class="number">21</span>, <span class="attr">name</span>:<span class="string">'违章建筑'</span>,<span class="attr">itemStyle</span>:&#123;</span><br><span class="line">                    color:<span class="string">"#54cd78"</span></span><br><span class="line">                &#125;&#125;,</span><br><span class="line">            &#123;<span class="attr">value</span>:<span class="number">18</span>, <span class="attr">name</span>:<span class="string">'非法船舶'</span>,<span class="attr">itemStyle</span>:&#123;</span><br><span class="line">                    color:<span class="string">"#2ab6f9"</span></span><br><span class="line">                &#125;&#125;,</span><br><span class="line">            &#123;<span class="attr">value</span>:<span class="number">12</span>, <span class="attr">name</span>:<span class="string">'占用水域'</span>,<span class="attr">itemStyle</span>:&#123;</span><br><span class="line">                    color:<span class="string">"#f2637b"</span></span><br><span class="line">                &#125;&#125;,</span><br><span class="line">            &#123;<span class="attr">value</span>:<span class="number">18</span>, <span class="attr">name</span>:<span class="string">'非法游泳'</span>,<span class="attr">itemStyle</span>:&#123;</span><br><span class="line">                    color:<span class="string">"#cbf119"</span></span><br><span class="line">                &#125;&#125;,</span><br><span class="line">            &#123;<span class="attr">value</span>:<span class="number">14</span>, <span class="attr">name</span>:<span class="string">'非法采砂'</span>,<span class="attr">itemStyle</span>:&#123;</span><br><span class="line">                    color:<span class="string">"#36cbcb"</span></span><br><span class="line">                &#125;&#125;,</span><br><span class="line">            &#123;<span class="attr">value</span>:<span class="number">14</span>, <span class="attr">name</span>:<span class="string">'违法垂钓'</span>,<span class="attr">itemStyle</span>:&#123;</span><br><span class="line">                    color:<span class="string">"#8944f5"</span></span><br><span class="line">                &#125;&#125;,</span><br><span class="line">            &#123;<span class="attr">value</span>:<span class="number">14</span>, <span class="attr">name</span>:<span class="string">'违法捕捞'</span>,<span class="attr">itemStyle</span>:&#123;</span><br><span class="line">                    color:<span class="string">"#ffa06d"</span></span><br><span class="line">                &#125;&#125;</span><br><span class="line">        ];</span><br><span class="line">        myChart.setOption(&#123;</span><br><span class="line">            title: &#123;</span><br><span class="line">                text:<span class="string">''</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            tooltip: &#123;</span><br><span class="line">                trigger: <span class="string">'item'</span>,</span><br><span class="line">                formatter: <span class="string">"&#123;a&#125; &lt;br/&gt;&#123;b&#125;: &#123;c&#125; (&#123;d&#125;%)"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">//图例名</span></span><br><span class="line">            legend: &#123;</span><br><span class="line">                orient: <span class="string">'horizontal'</span>,</span><br><span class="line">                x: <span class="string">'center'</span>,</span><br><span class="line">                y: <span class="string">'65%'</span>,</span><br><span class="line">                data:[<span class="string">'违法垂钓'</span>,<span class="string">'违法捕捞'</span>,<span class="string">'非法采砂'</span>,<span class="string">'非法游泳'</span>,<span class="string">'占用水域'</span>,<span class="string">'非法船舶'</span>,<span class="string">'违章建筑'</span>],</span><br><span class="line">                textStyle: &#123;</span><br><span class="line">                    color: <span class="string">'#999'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            series: [</span><br><span class="line">                &#123;</span><br><span class="line">                    name:<span class="string">'水质概况'</span>,</span><br><span class="line">                    type:<span class="string">'pie'</span>,</span><br><span class="line">                    center: [<span class="string">'50%'</span>, <span class="string">'30%'</span>],</span><br><span class="line">                    radius: [<span class="string">'40%'</span>, <span class="string">'63%'</span>],</span><br><span class="line">                    avoidLabelOverlap: <span class="literal">false</span>,</span><br><span class="line">                    label: &#123;</span><br><span class="line">                        normal: &#123;</span><br><span class="line">                            show: <span class="literal">true</span>,</span><br><span class="line">                            position: <span class="string">'center'</span>,</span><br><span class="line">                            formatter:<span class="function"><span class="keyword">function</span> (<span class="params">argument</span>) </span>&#123;</span><br><span class="line">                                <span class="keyword">var</span> html;</span><br><span class="line">                                html=<span class="string">'101\r\n\r\n'</span>+<span class="string">'违法事件'</span>;</span><br><span class="line">                                <span class="keyword">return</span> html;</span><br><span class="line">                            &#125;,</span><br><span class="line">                            textStyle:&#123;</span><br><span class="line">                                fontSize: <span class="number">14</span>,</span><br><span class="line">                                color:<span class="string">'#333'</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        emphasis: &#123;</span><br><span class="line">                            show: <span class="literal">false</span>,</span><br><span class="line">                            textStyle: &#123;</span><br><span class="line">                                fontSize: <span class="string">'15'</span>,</span><br><span class="line">                                fontWeight: <span class="string">'bold'</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    labelLine: &#123;</span><br><span class="line">                        normal: &#123;</span><br><span class="line">                            show: <span class="literal">false</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    data: Data,</span><br><span class="line">                    itemStyle : &#123;</span><br><span class="line">                        normal : &#123;</span><br><span class="line">                            <span class="comment">// color:'#0364d9'</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="折线图"><a href="#折线图" class="headerlink" title="折线图"></a>折线图</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">line_chart();</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">line_chart</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> xData = [<span class="string">"1月"</span>,<span class="string">"2月"</span>,<span class="string">"3月"</span>,<span class="string">"4月"</span>,<span class="string">"5月"</span>,<span class="string">"6月"</span>,<span class="string">"7月"</span>,<span class="string">"8月"</span>,<span class="string">"9月"</span>,<span class="string">"10月"</span>,<span class="string">"11月"</span>,<span class="string">"12月"</span>];</span><br><span class="line">        <span class="keyword">var</span> yData = [<span class="number">5</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">7</span>,<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">var</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'youID_chart'</span>));</span><br><span class="line">        myChart.setOption(&#123;</span><br><span class="line">            title:&#123;</span><br><span class="line">                <span class="comment">// 主副标题</span></span><br><span class="line">                text:<span class="string">''</span>,</span><br><span class="line">                subtext: <span class="string">''</span></span><br><span class="line">            &#125;,</span><br><span class="line">            grid: &#123;</span><br><span class="line">                left: <span class="number">45</span>,</span><br><span class="line">                top: <span class="number">20</span>,</span><br><span class="line">                right: <span class="number">20</span>,</span><br><span class="line">                bottom: <span class="number">35</span></span><br><span class="line">            &#125;,</span><br><span class="line">            tooltip: &#123;</span><br><span class="line">                trigger: <span class="string">'axis'</span><span class="comment">//item只会显示该点的数据，axis显示该列下所有坐标轴所对应的数据</span></span><br><span class="line">            &#125;,</span><br><span class="line">            xAxis: [</span><br><span class="line">                &#123;</span><br><span class="line">                    splitLine:&#123;</span><br><span class="line">                        lineStyle:&#123;</span><br><span class="line">                            type:<span class="string">'dotted'</span>,<span class="comment">//'dotted'虚线 'solid'实线</span></span><br><span class="line">                            color:<span class="string">'#ebebeb'</span></span><br><span class="line">                        &#125;,</span><br><span class="line">                        show: <span class="literal">true</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    axisTick:&#123;       <span class="comment">//刻度线</span></span><br><span class="line">                        <span class="string">"show"</span>:<span class="literal">false</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    type: <span class="string">'category'</span>,</span><br><span class="line">                    data: xData,</span><br><span class="line">                    axisPointer: &#123;</span><br><span class="line">                        type: <span class="string">'shadow'</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    axisLine: &#123;</span><br><span class="line">                        lineStyle:&#123;</span><br><span class="line">                            color:<span class="string">'#bfbfbf '</span>,</span><br><span class="line">                            width:<span class="number">0</span> <span class="comment">//这里是坐标轴的宽度,为0就是不显示</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    axisLabel: &#123;</span><br><span class="line">                        show: <span class="literal">true</span> <span class="comment">//这行代码控制着坐标轴x轴的文字是否显示</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            yAxis: [</span><br><span class="line">                &#123;</span><br><span class="line">                    show: <span class="literal">true</span>,</span><br><span class="line">                    splitLine:&#123;</span><br><span class="line">                        show: <span class="literal">false</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    type: <span class="string">'value'</span>,</span><br><span class="line">                    name: <span class="string">''</span>,</span><br><span class="line">                    nameTextStyle: &#123;</span><br><span class="line">                        color:<span class="string">'#bfbfbf'</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    axisLine: &#123;</span><br><span class="line">                        lineStyle:&#123;</span><br><span class="line">                            color:<span class="string">'#bfbfbf'</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            series: [&#123;</span><br><span class="line">                name:<span class="string">''</span>,</span><br><span class="line">                data: yData,</span><br><span class="line">                type: <span class="string">'line'</span>,</span><br><span class="line">                smooth: <span class="literal">true</span>,</span><br><span class="line">                itemStyle:&#123;</span><br><span class="line">                    normal:&#123;</span><br><span class="line">                        color:<span class="string">'#147aff'</span>, <span class="comment">//折点颜色</span></span><br><span class="line">                        lineStyle:&#123;</span><br><span class="line">                            color:<span class="string">'#147aff'</span> <span class="comment">//折线颜色</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                areaStyle: &#123;</span><br><span class="line">                    normal: &#123;</span><br><span class="line">                        color: <span class="keyword">new</span> echarts.graphic.LinearGradient(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, [</span><br><span class="line">                            &#123;<span class="attr">offset</span>: <span class="number">0</span>, <span class="attr">color</span>: <span class="string">'#d1e5ff'</span>&#125;,</span><br><span class="line">                            &#123;<span class="attr">offset</span>: <span class="number">0.5</span>, <span class="attr">color</span>: <span class="string">'#eaf3ff'</span>&#125;,</span><br><span class="line">                            &#123;<span class="attr">offset</span>: <span class="number">1</span>, <span class="attr">color</span>: <span class="string">'#fdfeff'</span>&#125;</span><br><span class="line">                        ])</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/1996zy/p/8963385.html" target="_blank" rel="noopener">https://www.cnblogs.com/1996zy/p/8963385.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Echarts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Echarts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node社区</title>
      <link href="/2019/09/30/node%E7%A4%BE%E5%8C%BA/"/>
      <url>/2019/09/30/node%E7%A4%BE%E5%8C%BA/</url>
      
        <content type="html"><![CDATA[<hr><h3 id="1-目录"><a href="#1-目录" class="headerlink" title="1.目录"></a>1.目录</h3><h3 id="2-模板"><a href="#2-模板" class="headerlink" title="2.模板"></a>2.模板</h3><h3 id="3-路由设计"><a href="#3-路由设计" class="headerlink" title="3.路由设计"></a>3.路由设计</h3><table><thead><tr><th>路径</th><th>方法</th><th>get参数</th><th>post参数</th><th>是否需要登入</th><th>备注</th></tr></thead><tbody><tr><td>/</td><td>GET</td><td></td><td></td><td></td><td>渲染首页</td></tr><tr><td>/register</td><td>GET</td><td></td><td></td><td></td><td>渲染注册界面</td></tr><tr><td>/register</td><td>POST</td><td></td><td>email、nickname、password</td><td></td><td>处理注册请求</td></tr><tr><td>/login</td><td>GET</td><td></td><td></td><td></td><td>渲染登录页面</td></tr><tr><td>/login</td><td>POST</td><td></td><td>email、password</td><td></td><td>处理登入请求</td></tr><tr><td>/logout</td><td>GET</td><td></td><td></td><td></td><td>处理退出请求</td></tr></tbody></table><p>处理注册请求</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">router.post(<span class="string">'/register'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">  <span class="comment">// 1. 获取表单注册数据</span></span><br><span class="line">  <span class="comment">// 2. 操作数据库</span></span><br><span class="line">  <span class="comment">// 3. 发送响应</span></span><br><span class="line">  <span class="built_in">console</span>.log(req.body)</span><br><span class="line">  <span class="keyword">var</span> body = req.body</span><br><span class="line">  User.findOne(&#123;</span><br><span class="line">    $or: [</span><br><span class="line">      &#123;<span class="attr">email</span>: <span class="string">'body.email'</span>&#125;,</span><br><span class="line">      &#123;<span class="attr">nickname</span>: <span class="string">'body.nickname'</span>&#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.status(<span class="number">500</span>).send(<span class="string">'Server error.'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(data)&#123;</span><br><span class="line">      <span class="keyword">return</span> res.status(<span class="number">200</span>).send(<span class="string">'e or name aleary exists'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    res.status(<span class="number">200</span>).send(<span class="string">'regist ok'</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>由于客户端定义了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataType: <span class="string">'json'</span></span><br></pre></td></tr></table></figure><p>无法识别字符串只能识别json格式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理注册请求</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">router.post(<span class="string">'/register'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">  <span class="comment">// 1. 获取表单注册数据</span></span><br><span class="line">  <span class="comment">// 2. 操作数据库</span></span><br><span class="line">  <span class="comment">// 3. 发送响应</span></span><br><span class="line">  <span class="keyword">var</span> body = req.body</span><br><span class="line">  User.findOne(&#123;</span><br><span class="line">    $or: [</span><br><span class="line">      &#123;<span class="attr">email</span>: body.email&#125;,</span><br><span class="line">      &#123;<span class="attr">nickname</span>: body.nickname&#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.status(<span class="number">500</span>).json(&#123;</span><br><span class="line">        err_code: <span class="number">500</span>,</span><br><span class="line">        message:<span class="string">'Server error.'</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(data)&#123;</span><br><span class="line">      <span class="keyword">return</span> res.status(<span class="number">200</span>).send(&#123;</span><br><span class="line">        err_code: <span class="number">1</span>,</span><br><span class="line">        message:<span class="string">'email or nickname already exists'</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//对密码加密</span></span><br><span class="line">    body.password = md5(md5(body.password))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> User(body).save(<span class="function"><span class="keyword">function</span>(<span class="params">err, user</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.status(<span class="number">500</span>).json(&#123;</span><br><span class="line">          err_code: <span class="number">500</span>,</span><br><span class="line">          message:<span class="string">'Server error.'</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">      res.status(<span class="number">200</span>).json(&#123;</span><br><span class="line">        err_code: <span class="number">0</span>,</span><br><span class="line">        message:<span class="string">'ok'</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>服务端重定向只对同步请求有用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res.redirect(&apos;/&apos;)</span><br></pre></td></tr></table></figure><p>异步只能客户端处理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">window.location.href = &apos;/&apos;</span><br></pre></td></tr></table></figure><p>安装session插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install express-session</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">app.use(session(&#123;  </span><br><span class="line">    secret: <span class="string">'keyboard cat'</span>,</span><br><span class="line">    resave: <span class="literal">false</span>,</span><br><span class="line">    saveUninitialized: <span class="literal">true</span></span><br><span class="line">&#125;))</span><br></pre></td></tr></table></figure><p><img src="../images/1568207859405.png" alt="1568207859405"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Git操作指令</title>
      <link href="/2019/09/30/Git%E6%8C%87%E4%BB%A4/"/>
      <url>/2019/09/30/Git%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br></pre></td></tr></table></figure><p>该命令显示从最近到最远的提交日志。每一次提交都有对应的 commit id 和 commit message。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log --pretty=oneline</span><br></pre></td></tr></table></figure><p> 参数有序显示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard id</span><br></pre></td></tr></table></figure><p>回退应版本 一般取前6位即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin HEAD --force</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -f</span><br></pre></td></tr></table></figure><p>强制回退远程仓库到当前版本<br>推送到本地到远程仓库：让远程仓库代码和你本地一样，到当前你本地的版本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reflog</span><br></pre></td></tr></table></figure><p>定义：查看命令操作的历史</p><p>1、做了部分修改，觉得改错了，回退回修改前的状态：（回退到当前版本的初始状态）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard HEAD</span><br></pre></td></tr></table></figure><p>2、回退到当前版本的前一个版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard HEAD^</span><br></pre></td></tr></table></figure><p>3、回退到当前版本的上上个版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard HEAD^^</span><br></pre></td></tr></table></figure><p>4、回退到当前版本之前的100个版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard HEAD~100</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node+express+MongoDB的crud案例</title>
      <link href="/2019/09/08/Node+express+MongoDB%E7%9A%84crud%E6%A1%88%E4%BE%8B/"/>
      <url>/2019/09/08/Node+express+MongoDB%E7%9A%84crud%E6%A1%88%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="基于express的crud"><a href="#基于express的crud" class="headerlink" title="基于express的crud"></a>基于express的crud</h1><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li><p>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>使用express搭建服务器</span><br><span class="line">npm install express</span><br><span class="line"><span class="meta">#</span>模板引擎页面渲染 定向</span><br><span class="line">npm install express-art-template art-template</span><br><span class="line"><span class="meta">#</span>用来处理POST请求 获取请求体(req.body)</span><br><span class="line">npm install body-parser</span><br><span class="line"><span class="meta">#</span>提供MongoDB的crud</span><br><span class="line">npm install mongoose</span><br></pre></td></tr></table></figure></li><li><p>express要点</p><blockquote><ul><li><p>设置 静态服务（url可访问）</p></li><li><p>把路由容器挂载到 app 服务中<br>app.use(router)</p></li><li><p>Express 提供了一种更好的方式 专门用来包装路由的<br>var express = require(‘express’)</p><p>创建一个路由容器<br>var router = express.Router()</p><p>执行</p><p>router.get()</p><p>router.post()</p></li></ul></blockquote></li><li><p>表单要点</p><blockquote><p>get  ===&gt; req.query 拿 get 请求参数<br>post ===&gt; req.body 拿post请求参数</p></blockquote></li><li><p>mongoose要点</p><blockquote><p>注意格式<br>id 是字符串格式且 为 ( _id )<br>记得去字符串</p></blockquote></li><li><p>art-template要点</p><ul><li>模板配置（默认约定文件在views目录）</li></ul></li></ol><blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; app.engine(<span class="string">'html'</span>, <span class="built_in">require</span>(<span class="string">'express-art-template'</span>)) </span><br><span class="line">&gt; </span><br><span class="line">&gt; app.set(<span class="string">'views'</span>,path.join(__dirname,<span class="string">'./views/'</span>)) <span class="comment">//若要修改</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>渲染页面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; router.get(<span class="string">'/students'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">&gt; </span><br><span class="line">&gt; res.render(<span class="string">'new.html'</span>)</span><br><span class="line">&gt; </span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>重定向</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; res.redirect(&apos;/students&apos;)</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>循环语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; &#123;&#123; each students &#125;&#125; </span><br><span class="line">&gt; </span><br><span class="line">&gt; &#123;&#123; $value.hobbies &#125;&#125;</span><br><span class="line">&gt; </span><br><span class="line">&gt; &#123;&#123; /each &#125;&#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h2 id="路由设计"><a href="#路由设计" class="headerlink" title="路由设计"></a>路由设计</h2><table><thead><tr><th>请求方法</th><th>请求路径</th><th>get 参数</th><th>post 参数</th><th>备注</th></tr></thead><tbody><tr><td>GET</td><td>/studens</td><td></td><td></td><td>渲染首页</td></tr><tr><td>GET</td><td>/students/new</td><td></td><td></td><td>渲染添加学生页面</td></tr><tr><td>POST</td><td>/studens/new</td><td></td><td>name、age、gender、hobbies</td><td>处理添加学生请求</td></tr><tr><td>GET</td><td>/students/edit</td><td>id</td><td></td><td>渲染编辑页面</td></tr><tr><td>POST</td><td>/studens/edit</td><td></td><td>id、name、age、gender、hobbies</td><td>处理编辑请求</td></tr><tr><td>GET</td><td>/students/delete</td><td>id</td><td></td><td>处理删除请求</td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><h3 id="入口模块（app-js）"><a href="#入口模块（app-js）" class="headerlink" title="入口模块（app.js）"></a>入口模块（app.js）</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * app.js 入口模块</span></span><br><span class="line"><span class="comment"> * 职责：</span></span><br><span class="line"><span class="comment"> *   创建服务</span></span><br><span class="line"><span class="comment"> *   做一些服务相关配置</span></span><br><span class="line"><span class="comment"> *     模板引擎</span></span><br><span class="line"><span class="comment"> *     body-parser 解析表单 post 请求体</span></span><br><span class="line"><span class="comment"> *     提供静态资源服务</span></span><br><span class="line"><span class="comment"> *   挂载路由</span></span><br><span class="line"><span class="comment"> *   监听端口启动服务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//用来处理post表单请求体（req.body）</span></span><br><span class="line"><span class="keyword">var</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> router = <span class="built_in">require</span>(<span class="string">'./router'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = express()</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置 静态服务（url可访问）</span></span><br><span class="line">app.use(<span class="string">'/node_modules/'</span>, express.static(<span class="string">'./node_modules/'</span>))</span><br><span class="line">app.use(<span class="string">'/public/'</span>, express.static(<span class="string">'./public/'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">//模板配置（默认约定文件在views目录）：</span></span><br><span class="line">app.engine(<span class="string">'html'</span>, <span class="built_in">require</span>(<span class="string">'express-art-template'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置模板引擎和 body-parser 一定要在 app.use(router) 挂载路由之前</span></span><br><span class="line"><span class="comment">// parse application/x-www-form-urlencoded</span></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;))</span><br><span class="line"><span class="comment">// parse application/json</span></span><br><span class="line">app.use(bodyParser.json())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// router(app)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 把路由容器挂载到 app 服务中</span></span><br><span class="line">app.use(router)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">4000</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'running 4000...'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = app</span><br></pre></td></tr></table></figure><h3 id="数据操作文件模块（student-js）"><a href="#数据操作文件模块（student-js）" class="headerlink" title="数据操作文件模块（student.js）"></a>数据操作文件模块（student.js）</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * student.js 操作数据模块</span></span><br><span class="line"><span class="comment"> * 职责：操作文件中的数据，只处理数据，不关心业务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> mongoose = <span class="built_in">require</span>(<span class="string">'mongoose'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Schema = mongoose.Schema</span><br><span class="line"></span><br><span class="line"><span class="comment">//连接数据库</span></span><br><span class="line">mongoose.connect(<span class="string">'mongodb://localhost/itcast'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义表单 设计文档结构</span></span><br><span class="line"><span class="keyword">var</span> studentSchema = <span class="keyword">new</span> Schema(&#123;</span><br><span class="line">  name : &#123;</span><br><span class="line">    type: <span class="built_in">String</span>,</span><br><span class="line">    required: <span class="literal">true</span> <span class="comment">//必填</span></span><br><span class="line">  &#125;,</span><br><span class="line">  gender: &#123;</span><br><span class="line">    type: <span class="built_in">Number</span>,</span><br><span class="line">    enum: [<span class="number">0</span>, <span class="number">1</span>], <span class="comment">//0或者1</span></span><br><span class="line">    <span class="keyword">default</span>: <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  age: &#123;</span><br><span class="line">    type: <span class="built_in">Number</span> <span class="comment">//可为空</span></span><br><span class="line">  &#125;,</span><br><span class="line">  hobbies : &#123;</span><br><span class="line">    type: <span class="built_in">String</span> <span class="comment">//可为空</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发布为模型 并导出给router模块执行crud（注意生成的集合为小写复数students）</span></span><br><span class="line"><span class="comment">// 模型构造函数</span></span><br><span class="line"><span class="built_in">module</span>.exports = mongoose.model(<span class="string">'Student'</span>,studentSchema)</span><br></pre></td></tr></table></figure><h3 id="路由模块（router-js）"><a href="#路由模块（router-js）" class="headerlink" title="路由模块（router.js）"></a>路由模块（router.js）</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * router.js 路由模块</span></span><br><span class="line"><span class="comment"> * 职责：</span></span><br><span class="line"><span class="comment"> *   处理路由</span></span><br><span class="line"><span class="comment"> *   根据不同的请求方法+请求路径设置具体的请求处理函数</span></span><br><span class="line"><span class="comment"> * 模块职责要单一，不要乱写</span></span><br><span class="line"><span class="comment"> * 划分模块的目的就是为了增强项目代码的可维护性</span></span><br><span class="line"><span class="comment"> * 提升开发效率</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收模型构造函数 用来执行crud</span></span><br><span class="line"><span class="keyword">var</span> Student = <span class="built_in">require</span>(<span class="string">'./student'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Express 提供了一种更好的方式</span></span><br><span class="line"><span class="comment">// 专门用来包装路由的</span></span><br><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 创建一个路由容器</span></span><br><span class="line"><span class="keyword">var</span> router = express.Router()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 把路由都挂载到 router 路由容器中</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 渲染学生列表页面</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">router.get(<span class="string">'/students'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    Student.find(<span class="function"><span class="keyword">function</span>(<span class="params">err, students</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(err)&#123;</span><br><span class="line">        <span class="keyword">return</span> res.status(<span class="number">500</span>).send(<span class="string">'sever error'</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      res.render(<span class="string">'index.html'</span>, &#123;</span><br><span class="line">        fruits: [</span><br><span class="line">          <span class="string">'苹果'</span>,</span><br><span class="line">          <span class="string">'香蕉'</span>,</span><br><span class="line">          <span class="string">'橘子'</span></span><br><span class="line">        ],</span><br><span class="line">        students: students</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 渲染添加学生页面</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">router.get(<span class="string">'/students/new'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.render(<span class="string">'new.html'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 处理添加学生</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">router.post(<span class="string">'/students/new'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 1. 获取表单数据</span></span><br><span class="line">  <span class="comment">// 2. 处理</span></span><br><span class="line">  <span class="comment">// 3. 发送响应</span></span><br><span class="line">  <span class="keyword">new</span> Student(req.body).save(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.status(<span class="number">500</span>).send(<span class="string">'Server error.'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    res.redirect(<span class="string">'/students'</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 渲染编辑学生页面</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">router.get(<span class="string">'/students/edit'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 1. 在客户端的列表页中处理链接问题（需要有 id 参数）</span></span><br><span class="line">  <span class="comment">// 2. 获取要编辑的学生 id </span></span><br><span class="line">  <span class="comment">// 3. 渲染编辑页面</span></span><br><span class="line">  <span class="comment">//    根据 id 把学生信息查出来</span></span><br><span class="line">  <span class="comment">//    使用模板引擎渲染页面</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">//MongoDB的id是字符串格式的需处理一下且对应html文件中需要注意id是带带下划线的(_id)</span></span><br><span class="line"></span><br><span class="line">  Student.findById(req.query.id.replace(<span class="regexp">/"/g</span>, <span class="string">''</span>), <span class="function"><span class="keyword">function</span> (<span class="params">err, student</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.status(<span class="number">500</span>).send(<span class="string">'Server error.'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    res.render(<span class="string">'edit.html'</span>, &#123;</span><br><span class="line">      student: student</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 处理编辑学生</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">router.post(<span class="string">'/students/edit'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 1. 获取表单数据</span></span><br><span class="line">    <span class="comment">//  req.body</span></span><br><span class="line">    <span class="comment">//  console.log(req.body)</span></span><br><span class="line">  <span class="comment">// 2. 更新</span></span><br><span class="line">    <span class="comment">//  Student.updateById()</span></span><br><span class="line">  <span class="comment">// 3. 发送响应</span></span><br><span class="line">  <span class="keyword">var</span> id = req.body.id.replace(<span class="regexp">/"/g</span>, <span class="string">''</span>)</span><br><span class="line">  Student.findByIdAndUpdate(id, req.body, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.status(<span class="number">500</span>).send(<span class="string">'Server error.'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    res.redirect(<span class="string">'/students'</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 处理删除学生</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">router.get(<span class="string">'/students/delete'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 1. 获取要删除的 id</span></span><br><span class="line">  <span class="comment">// 2. 根据 id 执行删除操作</span></span><br><span class="line">  <span class="comment">// 3. 根据操作结果发送响应数据</span></span><br><span class="line">  <span class="keyword">var</span> id = req.query.id.replace(<span class="regexp">/"/g</span>, <span class="string">''</span>)</span><br><span class="line">  Student.findByIdAndRemove(id, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.status(<span class="number">500</span>).send(<span class="string">'Server error.'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    res.redirect(<span class="string">'/students'</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 把 router 导出</span></span><br><span class="line"><span class="built_in">module</span>.exports = router</span><br></pre></td></tr></table></figure><h3 id="views的文件"><a href="#views的文件" class="headerlink" title="views的文件"></a>views的文件</h3><h4 id="new-html"><a href="#new-html" class="headerlink" title="new.html"></a>new.html</h4><ol><li>这里会自动生成id</li><li>故只需要  name、age、gender、hobbies</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"sub-header"</span>&gt;</span>添加学生<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/students/new"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">required</span> <span class="attr">minlength</span>=<span class="string">"2"</span> <span class="attr">maxlength</span>=<span class="string">"10"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">"0"</span> <span class="attr">checked</span>&gt;</span> 男</span><br><span class="line">              <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span> 女</span><br><span class="line">              <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">name</span>=<span class="string">"age"</span> <span class="attr">required</span> <span class="attr">min</span>=<span class="string">"1"</span> <span class="attr">max</span>=<span class="string">"150"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span>&gt;</span>爱好<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">name</span>=<span class="string">"hobbies"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="edit-html"><a href="#edit-html" class="headerlink" title="edit.html"></a>edit.html</h3><ol><li>注意id在mongodb中是 （ _id )</li><li>修改需要提交  id、name、age、gender、hobbies</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"sub-header"</span>&gt;</span>添加学生<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/students/edit"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">          </span><br><span class="line">          <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">            用来放一些不希望被用户看见，但是需要被提交到服务端的数据</span></span><br><span class="line"><span class="comment">           --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; student._id &#125;&#125;"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">required</span> <span class="attr">minlength</span>=<span class="string">"2"</span> <span class="attr">maxlength</span>=<span class="string">"10"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; student.name &#125;&#125;"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">"0"</span> <span class="attr">checked</span>&gt;</span> 男</span><br><span class="line">              <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span> 女</span><br><span class="line">              <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">name</span>=<span class="string">"age"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; student.age &#125;&#125;"</span> <span class="attr">required</span> <span class="attr">min</span>=<span class="string">"1"</span> <span class="attr">max</span>=<span class="string">"150"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span>&gt;</span>爱好<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">name</span>=<span class="string">"hobbies"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; student.hobbies &#125;&#125;"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h4><ol><li>模板循环语法each</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-striped"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>#<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>爱好<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">                  &#123;&#123; each students &#125;&#125;</span><br><span class="line">                  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; $index &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; $value.name &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; $value.gender &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; $value.age &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; $value.hobbies &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/students/edit?id=&#123;&#123; $value.id &#125;&#125;"</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/students/delete?id=&#123;&#123; $value.id &#125;&#125;"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                  &#123;&#123; /each &#125;&#125;</span><br><span class="line">              <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
            <tag> Node </tag>
            
            <tag> Express </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node+mysql</title>
      <link href="/2019/09/08/node-mysql/"/>
      <url>/2019/09/08/node-mysql/</url>
      
        <content type="html"><![CDATA[<h1 id="使用Node操作MySQL数据库"><a href="#使用Node操作MySQL数据库" class="headerlink" title="使用Node操作MySQL数据库"></a>使用Node操作MySQL数据库</h1><p>安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install mysql</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mysql = <span class="built_in">require</span>(<span class="string">'mysql'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 创建连接</span></span><br><span class="line"><span class="keyword">var</span> connection = mysql.createConnection(&#123;</span><br><span class="line">  host: <span class="string">'localhost'</span>,</span><br><span class="line">  user: <span class="string">'root'</span>,</span><br><span class="line">  password: <span class="string">'123456'</span>,</span><br><span class="line">  database: <span class="string">'users'</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 连接数据库 打开冰箱门</span></span><br><span class="line">connection.connect();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 执行数据操作 把大象放到冰箱</span></span><br><span class="line">connection.query(<span class="string">'SELECT * FROM `users`'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">error, results, fields</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (error) <span class="keyword">throw</span> error;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'The solution is: '</span>, results);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// connection.query('INSERT INTO users VALUES(NULL, "admin", "123456")', function (error, results, fields) &#123;</span></span><br><span class="line"><span class="comment">//   if (error) throw error;</span></span><br><span class="line"><span class="comment">//   console.log('The solution is: ', results);</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 4. 关闭连接 关闭冰箱门</span></span><br><span class="line">connection.end();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node-mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mongoose</title>
      <link href="/2019/09/08/mongoose/"/>
      <url>/2019/09/08/mongoose/</url>
      
        <content type="html"><![CDATA[<h1 id="mongoose"><a href="#mongoose" class="headerlink" title="mongoose"></a>mongoose</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install mongoose</span><br></pre></td></tr></table></figure><h2 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mongoose = <span class="built_in">require</span>(<span class="string">'mongoose'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Schema = mongoose.Schema</span><br></pre></td></tr></table></figure><p>##连接数据库</p><ol><li>指定连接的数据库不需要存在，当你插入第一条数据之后就会自动被创建出来</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongoose.connect(<span class="string">'mongodb://localhost/itcast'</span>)</span><br></pre></td></tr></table></figure><p>##设计文档结构（表结构）</p><blockquote><ol><li>字段名称就是表结构中的属性名称</li><li>约束的目的是为了保证数据的完整性，不要有脏数据</li></ol></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> userSchema = <span class="keyword">new</span> Schema(&#123;</span><br><span class="line">  username: &#123;</span><br><span class="line">    type: <span class="built_in">String</span>,</span><br><span class="line">    required: <span class="literal">true</span> <span class="comment">// 必须有</span></span><br><span class="line">  &#125;,</span><br><span class="line">  password: &#123;</span><br><span class="line">    type: <span class="built_in">String</span>,</span><br><span class="line">    required: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  email: &#123;</span><br><span class="line">    type: <span class="built_in">String</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>##将文档结构发布为模型</p><blockquote><p>mongoose.model 方法就是用来将一个架构发布为 model<br>第一个参数：传入一个大写名词单数字符串用来表示你的数据库名称<br>                       mongoose 会自动将大写名词的字符串生成 小写复数 的集合名称<br>                       例如这里的 User 最终会变为 users 集合名称<br>第二个参数：架构 Schema<br>返回值：<strong>模型构造函数</strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> User = mongoose.model(<span class="string">'User'</span>, userSchema)</span><br></pre></td></tr></table></figure><p>##当我们有了模型构造函数之后，就可以使用这个构造函数对 users 集合中的数据为所欲为了（增删改查）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// **********************</span></span><br><span class="line"><span class="comment">// #region /新增数据</span></span><br><span class="line"><span class="comment">// **********************</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> admin = <span class="keyword">new</span> User(&#123;</span><br><span class="line">    username: <span class="string">'zs'</span>,</span><br><span class="line">    password: <span class="string">'123456'</span>,</span><br><span class="line">    email: <span class="string">'admin@admin.com'</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">admin.save(<span class="function"><span class="keyword">function</span> (<span class="params">err, ret</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'保存失败'</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'保存成功'</span>)</span><br><span class="line">        <span class="built_in">console</span>.log(ret)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// **********************</span></span><br><span class="line"><span class="comment">// #region /查询数据</span></span><br><span class="line"><span class="comment">// **********************</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//查找所有</span></span><br><span class="line"> User.find(<span class="function"><span class="keyword">function</span> (<span class="params">err, ret</span>) </span>&#123;</span><br><span class="line">   <span class="keyword">if</span> (err) &#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">'查询失败'</span>)</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     <span class="built_in">console</span>.log(ret)</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//按条件查询所有</span></span><br><span class="line"> User.find(&#123;</span><br><span class="line">   username: <span class="string">'zs'</span></span><br><span class="line"> &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err, ret</span>) </span>&#123;</span><br><span class="line">   <span class="keyword">if</span> (err) &#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">'查询失败'</span>)</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     <span class="built_in">console</span>.log(ret)</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//条件查询</span></span><br><span class="line"> User.findOne(&#123;</span><br><span class="line">   username: <span class="string">'zs'</span>,</span><br><span class="line">   password: <span class="string">'12345678'</span></span><br><span class="line"> &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err, ret</span>) </span>&#123;</span><br><span class="line">   <span class="keyword">if</span> (err) &#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">'查询失败'</span>)</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     <span class="built_in">console</span>.log(ret)</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据id查询</span></span><br><span class="line">User.findById()</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// **********************</span></span><br><span class="line"><span class="comment">// #region /删除数据</span></span><br><span class="line"><span class="comment">// **********************</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//移除所有符合条件的</span></span><br><span class="line"> User.remove(&#123;</span><br><span class="line">   username: <span class="string">'zs'</span></span><br><span class="line"> &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err, ret</span>) </span>&#123;</span><br><span class="line">   <span class="keyword">if</span> (err) &#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">'删除失败'</span>)</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">'删除成功'</span>)</span><br><span class="line">     <span class="built_in">console</span>.log(ret)</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据ID删除</span></span><br><span class="line">User.findByIdAndRemove()</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// **********************</span></span><br><span class="line"><span class="comment">// #region /更新数据</span></span><br><span class="line"><span class="comment">// **********************</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//根据id更新一个</span></span><br><span class="line">User.findByIdAndUpdate(<span class="string">'5a001b23d219eb00c8581184'</span>, &#123;</span><br><span class="line">    password: <span class="string">'123'</span></span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err, ret</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'更新失败'</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'更新成功'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据指定条件更新一个</span></span><br><span class="line">User.findOneAndUpdate()</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据条件更新所有</span></span><br><span class="line">User.update()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mongoose </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MogoDB数据库</title>
      <link href="/2019/09/07/mogodb%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2019/09/07/mogodb%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h1 id="配置MongoDB"><a href="#配置MongoDB" class="headerlink" title="配置MongoDB"></a>配置MongoDB</h1><ol><li><p>配置环境变量：</p><p><strong>path添加 安装目录下/bin</strong></p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Develop\mongodb\bin</span><br></pre></td></tr></table></figure><blockquote><p>已经在 C 盘安装了 mongodb，现在让我们创建一个 data 的目录然后在 data 目录里创建 db 目录。</p><p>C:\data\db</p></blockquote><ol start="2"><li>开启：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod</span><br></pre></td></tr></table></figure><ol start="3"><li>连接数据库：(再开一个cmd)</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>连接本机的MongoDB数据库</span><br><span class="line">mongo</span><br><span class="line"><span class="meta">#</span>退出</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><ol start="4"><li>基本命令：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>查看显示所有数据库</span><br><span class="line">show dbs</span><br><span class="line"><span class="meta">#</span>查看当前的数据库</span><br><span class="line">db</span><br><span class="line"><span class="meta">#</span>切换到指定的数据库（如果没有会新建）</span><br><span class="line">use 数据库名称</span><br><span class="line"><span class="meta">#</span>插入数据(新建表名students插入数据)</span><br><span class="line">db.students.insertOne("name":"jack")</span><br><span class="line"><span class="meta">#</span>查看数据</span><br><span class="line">show collections</span><br><span class="line">db.students.find()</span><br></pre></td></tr></table></figure><h3 id="在node中如何操作MongoDB数据"><a href="#在node中如何操作MongoDB数据" class="headerlink" title="在node中如何操作MongoDB数据"></a>在node中如何操作MongoDB数据</h3><p>使用官方的mongodb的包</p><p><a href="https://github.com/mongodb/node-mongodb-native" target="_blank" rel="noopener">github包</a></p><p>基于MongoDB官方的包再一次做了封装mongoose</p><p><a href="https://mongoosejs.com/" target="_blank" rel="noopener">mongoose</a></p>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node之Express框架</title>
      <link href="/2019/09/06/node%E7%9A%84Express/"/>
      <url>/2019/09/06/node%E7%9A%84Express/</url>
      
        <content type="html"><![CDATA[<h3 id="先安装"><a href="#先安装" class="headerlink" title="先安装"></a>先安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install express --save</span><br></pre></td></tr></table></figure><h3 id="创建一个hello-world"><a href="#创建一个hello-world" class="headerlink" title="创建一个hello world"></a>创建一个hello world</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = express()</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">  res.send(<span class="string">'hello world'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">4000</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'star 4000'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="express-静态服务-API"><a href="#express-静态服务-API" class="headerlink" title="express 静态服务 API"></a>express 静态服务 API</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">app.use(<span class="string">'/public/'</span>, express.static(<span class="string">'./public'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">//另一种用法 路径省略public</span></span><br><span class="line">app.use(express.static(<span class="string">'./public'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">//标识  访问的时候路径中用a来替换public </span></span><br><span class="line">app.use(<span class="string">'/a/'</span>, express.static(<span class="string">'./public'</span>))</span><br></pre></td></tr></table></figure><h3 id="修改完代码自动重启"><a href="#修改完代码自动重启" class="headerlink" title="修改完代码自动重启"></a>修改完代码自动重启</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --global nodemon</span><br></pre></td></tr></table></figure><p>使用方法</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">node app.js</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>替换为</span><br><span class="line">nodemon app.js</span><br></pre></td></tr></table></figure><h3 id="基本路由"><a href="#基本路由" class="headerlink" title="基本路由"></a>基本路由</h3><blockquote><p>get:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; app.get(<span class="string">'/'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">&gt;   res.send(<span class="string">'hello world'</span>)</span><br><span class="line">&gt; &#125;)</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>post:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; app.post(<span class="string">'/'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">&gt;   res.send(<span class="string">'hello world'</span>)</span><br><span class="line">&gt; &#125;)</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><hr><h3 id="在Express中配置使用-art-template-模板引擎"><a href="#在Express中配置使用-art-template-模板引擎" class="headerlink" title="在Express中配置使用 art-template 模板引擎"></a>在<code>Express</code>中配置使用 <code>art-template</code> 模板引擎</h3><blockquote><p><a href="https://aui.github.io/art-template/" target="_blank" rel="noopener">官方文档</a></p><p><a href="https://github.com/aui/art-template" target="_blank" rel="noopener">仓库</a></p></blockquote><p>安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install --save art-template</span><br><span class="line">npm install --save express-art-template</span><br></pre></td></tr></table></figure><p>配置：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.engine(<span class="string">'html'</span>, <span class="built_in">require</span>(<span class="string">'express-art-template'</span>))</span><br></pre></td></tr></table></figure><p>使用：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">'/'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">  res.render(<span class="string">'index.html'</span>,&#123;</span><br><span class="line">      title: <span class="string">'aaa'</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>默认约定界面文件在 views 目录</p><p>如果想要修改默认的 views 目录，则可以</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">app.set(<span class="string">'views'</span>, 要设置的默认路径)</span><br><span class="line">app.set(<span class="string">'views'</span>,path.join(__dirname,<span class="string">'./views/'</span>))</span><br></pre></td></tr></table></figure><h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// res.statusCode = 302</span></span><br><span class="line"><span class="comment">// res.setHeader('Location', '/') </span></span><br><span class="line"><span class="comment">//原来需要这样</span></span><br><span class="line">res.redirect(<span class="string">'/'</span>)</span><br></pre></td></tr></table></figure><hr><h3 id="表单GET"><a href="#表单GET" class="headerlink" title="表单GET"></a>表单GET</h3><p>req.query 只能拿 get 请求参数</p><h3 id="表单POST"><a href="#表单POST" class="headerlink" title="表单POST"></a>表单POST</h3><p>拿post请求体没有内置API，需要第三方包： 、</p><h3 id="body-parser"><a href="#body-parser" class="headerlink" title="body-parser"></a><strong>body-parser</strong></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install body-parser --save</span><br></pre></td></tr></table></figure><p>配置：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="comment">//1.导包</span></span><br><span class="line"><span class="keyword">var</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = express()</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置 body-parser</span></span><br><span class="line"><span class="comment">//只要加入这个配置，在req请求对象上会多出来一个属性：body</span></span><br><span class="line"><span class="comment">//通过req.body来获取数据</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置 body-parser 中间件（插件，专门用来解析表单 POST 请求体）</span></span><br><span class="line"><span class="comment">// parse application/x-www-form-urlencoded</span></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;))</span><br><span class="line"></span><br><span class="line"><span class="comment">// parse application/json</span></span><br><span class="line">app.use(bodyParser.json())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.use(<span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.setHeader(<span class="string">'Content-Type'</span>, <span class="string">'text/plain'</span>)</span><br><span class="line">  res.write(<span class="string">'you posted:\n'</span>)</span><br><span class="line">  res.end(<span class="built_in">JSON</span>.stringify(req.body, <span class="literal">null</span>, <span class="number">2</span>))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Express </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm命令</title>
      <link href="/2019/09/04/npm%E5%91%BD%E4%BB%A4/"/>
      <url>/2019/09/04/npm%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="npm-常用命令"><a href="#npm-常用命令" class="headerlink" title="npm 常用命令"></a>npm 常用命令</h3><p><strong>npmjs</strong><a href="https://www.npmjs.com" target="_blank" rel="noopener">网站上传包</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm --version // 查看版本</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --global npm //升级npm</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init -y //快速生成</span><br></pre></td></tr></table></figure> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm stall 包名</span><br></pre></td></tr></table></figure><blockquote><ol><li>npm i 包名 （简写）</li><li>只下载</li></ol></blockquote> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm stall 包名 --save</span><br></pre></td></tr></table></figure><blockquote><ol><li>下载并保存依赖项 生成dependencies 选项</li><li>npm i -S 包名 （简写）</li></ol></blockquote> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall 包名  //只删除，有依赖项会依然保存</span><br></pre></td></tr></table></figure> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall --save 包名</span><br></pre></td></tr></table></figure><blockquote><ol><li>删除的同时去除依赖信息</li><li>npm un -S 包名 （简写）</li></ol></blockquote> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm help //查看使用帮助</span><br></pre></td></tr></table></figure> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm 命令 help //查看指定命令的使用帮助</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --global cnpm //解决被墙的问题使用cnpm</span><br></pre></td></tr></table></figure><blockquote><p>–global 安装全局 在任意目录都可以</p><p>使用方法执行命令 替换 npm为 cnpm</p></blockquote><p><strong>如果不想下载可通过下面这个配置</strong></p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; npm config set registry https://registry.npm.taobao.org</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>查看npm 配置信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; cnpm config list</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h3 id="npm-4之后的版本不需要-–save-会自动保存依赖-还会生成一个的lock文件"><a href="#npm-4之后的版本不需要-–save-会自动保存依赖-还会生成一个的lock文件" class="headerlink" title="npm 4之后的版本不需要 –save 会自动保存依赖 还会生成一个的lock文件"></a>npm 4之后的版本不需要 –save 会自动保存依赖 还会生成一个的lock文件</h3><blockquote><p>package-lock.json文件</p><p>作用</p><ol><li>锁定版本</li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> npm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Promise</title>
      <link href="/2019/09/04/Promise/"/>
      <url>/2019/09/04/Promise/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/1567996038628.png" alt="1567996038628"></p><h1 id="Promise是一个构造函数"><a href="#Promise是一个构造函数" class="headerlink" title="Promise是一个构造函数"></a>Promise是一个构造函数</h1><p><img src="/images/1567997039617.png" alt="1567997039617"></p><h2 id="链式调用"><a href="#链式调用" class="headerlink" title="链式调用"></a>链式调用</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> p1 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">  fs.readFile(<span class="string">'./data/a.txt'</span>, <span class="string">'utf8'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      reject(err)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      resolve(data)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p2 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">  fs.readFile(<span class="string">'./data/b.txt'</span>, <span class="string">'utf8'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      reject(err)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      resolve(data)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p3 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">  fs.readFile(<span class="string">'./data/c.txt'</span>, <span class="string">'utf8'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      reject(err)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      resolve(data)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">p1</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data)</span><br><span class="line">    <span class="comment">// 当 p1 读取成功的时候</span></span><br><span class="line">    <span class="comment">// 当前函数中 return 的结果就可以在后面的 then 中 function 接收到</span></span><br><span class="line">    <span class="comment">// 当你 return 123 后面就接收到 123</span></span><br><span class="line">    <span class="comment">//      return 'hello' 后面就接收到 'hello'</span></span><br><span class="line">    <span class="comment">//      没有 return 后面收到的就是 undefined</span></span><br><span class="line">    <span class="comment">// 上面那些 return 的数据没什么卵用</span></span><br><span class="line">    <span class="comment">// 真正有用的是：我们可以 return 一个 Promise 对象</span></span><br><span class="line">    <span class="comment">// 当 return 一个 Promise 对象的时候，后续的 then 中的 方法的第一个参数会作为 p2 的 resolve</span></span><br><span class="line">    <span class="comment">// </span></span><br><span class="line">    <span class="keyword">return</span> p2</span><br><span class="line">  &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'读取文件失败了'</span>, err)</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data)</span><br><span class="line">    <span class="keyword">return</span> p3</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'end'</span>)</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><p>封装</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pReadFile</span>(<span class="params">filePath</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">    fs.readFile(filePath, <span class="string">'utf8'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        reject(err)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        resolve(data)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pReadFile(<span class="string">'./data/a.txt'</span>)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data)</span><br><span class="line">    <span class="keyword">return</span> pReadFile(<span class="string">'./data/b.txt'</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data)</span><br><span class="line">    <span class="keyword">return</span> pReadFile(<span class="string">'./data/c.txt'</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data)</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><h2 id="promise应用场景-调用多个接口"><a href="#promise应用场景-调用多个接口" class="headerlink" title="promise应用场景 调用多个接口"></a>promise应用场景 调用多个接口</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">"user_form"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/template"</span> <span class="attr">id</span>=<span class="string">"tpl"</span>&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; user.username &#125;&#125;"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; user.age &#125;&#125;"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span>&gt;</span>职业<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span></span></span><br><span class="line"><span class="javascript">        &#123;&#123; each jobs &#125;&#125; &#123;&#123; <span class="keyword">if</span> user.job === $value.id &#125;&#125;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; $value.id &#125;&#125;"</span> <span class="attr">selected</span>&gt;</span>&#123;&#123; $value.name &#125;&#125;<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line"><span class="javascript">        &#123;&#123; <span class="keyword">else</span> &#125;&#125;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; $value.id &#125;&#125;"</span>&gt;</span>&#123;&#123; $value.name &#125;&#125;<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line"><span class="javascript">        &#123;&#123; /<span class="keyword">if</span> &#125;&#125; &#123;&#123; /each &#125;&#125;</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"node_modules/art-template/lib/template-web.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"node_modules/jquery/dist/jquery.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 用户表</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//  其中一个接口获取用户数据</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//  职业：2</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 职业信息表</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//  其中一个接口获取所有的职业信息</span></span></span><br><span class="line">      </span><br><span class="line"><span class="javascript">    <span class="comment">//普通的方式</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">get</span>('http://127.0.0.1:3000/users/4', function (userData) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">get</span>('http://127.0.0.1:3000/jobs', function (jobsData) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> htmlStr = template(<span class="string">'tpl'</span>, &#123;</span></span><br><span class="line"><span class="javascript">          user: <span class="built_in">JSON</span>.parse(userData),</span></span><br><span class="line"><span class="javascript">          jobs: <span class="built_in">JSON</span>.parse(jobsData)</span></span><br><span class="line">        &#125;)</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(htmlStr)</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.querySelector(<span class="string">'#user_form'</span>).innerHTML = htmlStr</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">      </span><br><span class="line"><span class="javascript">    <span class="comment">// jQurey中封装的promise</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> data = &#123;&#125;</span></span><br><span class="line"><span class="javascript">    $.<span class="keyword">get</span>('http://127.0.0.1:3000/users/4')</span></span><br><span class="line"><span class="javascript">      .then(<span class="function"><span class="keyword">function</span> (<span class="params">user</span>) </span>&#123;</span></span><br><span class="line">        data.user = user</span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> $.<span class="keyword">get</span>('http://127.0.0.1:3000/jobs')</span></span><br><span class="line">      &#125;)</span><br><span class="line"><span class="javascript">      .then(<span class="function"><span class="keyword">function</span> (<span class="params">jobs</span>) </span>&#123;</span></span><br><span class="line">        data.jobs = jobs</span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> htmlStr = template(<span class="string">'tpl'</span>, data)</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.querySelector(<span class="string">'#user_form'</span>).innerHTML = htmlStr</span></span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 封装的promise方法</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> data = &#123;&#125;</span></span><br><span class="line"><span class="javascript">    pGet(<span class="string">'http://127.0.0.1:3000/users/4'</span>)</span></span><br><span class="line"><span class="javascript">      .then(<span class="function"><span class="keyword">function</span> (<span class="params">user</span>) </span>&#123;</span></span><br><span class="line">        data.user = user</span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> pGet(<span class="string">'http://127.0.0.1:3000/jobs'</span>)</span></span><br><span class="line">      &#125;)</span><br><span class="line"><span class="javascript">      .then(<span class="function"><span class="keyword">function</span> (<span class="params">jobs</span>) </span>&#123;</span></span><br><span class="line">        data.jobs = jobs</span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> htmlStr = template(<span class="string">'tpl'</span>, data)</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.querySelector(<span class="string">'#user_form'</span>).innerHTML = htmlStr</span></span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    pGet(<span class="string">'http://127.0.0.1:3000/users/4'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(data)</span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    pGet(<span class="string">'http://127.0.0.1:3000/users/4'</span>)</span></span><br><span class="line"><span class="javascript">      .then(<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(data)</span></span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">pGet</span>(<span class="params">url, callback</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oReq = <span class="keyword">new</span> XMLHttpRequest()</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 当请求加载成功之后要调用指定的函数</span></span></span><br><span class="line"><span class="javascript">        oReq.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="comment">// 我现在需要得到这里的 oReq.responseText</span></span></span><br><span class="line"><span class="javascript">          callback &amp;&amp; callback(<span class="built_in">JSON</span>.parse(oReq.responseText))</span></span><br><span class="line"><span class="javascript">          resolve(<span class="built_in">JSON</span>.parse(oReq.responseText))</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        oReq.onerror = <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span></span><br><span class="line">          reject(err)</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        oReq.open(<span class="string">"get"</span>, url, <span class="literal">true</span>)</span></span><br><span class="line">        oReq.send()</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 这个 get 是 callback 方式的 API</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 可以使用 Promise 来解决这个问题</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params">url, callback</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> oReq = <span class="keyword">new</span> XMLHttpRequest()</span></span><br><span class="line"><span class="javascript">      <span class="comment">// 当请求加载成功之后要调用指定的函数</span></span></span><br><span class="line"><span class="javascript">      oReq.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 我现在需要得到这里的 oReq.responseText</span></span></span><br><span class="line">        callback(oReq.responseText)</span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      oReq.open(<span class="string">"get"</span>, url, <span class="literal">true</span>)</span></span><br><span class="line">      oReq.send()</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Promise </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Promise </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node模块</title>
      <link href="/2019/09/03/node%E6%A8%A1%E5%9D%97/"/>
      <url>/2019/09/03/node%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li><p>模块系统</p><ul><li><p>核心模块</p><ul><li>fs 文件操作模块</li><li>http 网络服务构建模块</li><li>os 操作系统信息模块</li><li>path 路径处理模块</li><li>url 路径操作模块</li></ul></li><li><p>第三方模块</p><ul><li><p>art-template</p><ol><li><p>安装  npm install art-template</p></li><li><p>加载  var template = require(‘art-template’) </p></li><li><p>使用  template.render()</p></li></ol></li><li><p>通过npm下载使用</p></li></ul></li><li><p>自己写的模块</p><ul><li>自己创建的文件</li></ul></li><li><p>加载规则以及加载机制</p></li><li><p>循环加载</p></li></ul></li><li><p>npm</p></li><li><p>package.json</p></li><li><p>Express</p><ul><li>第三方 Web 开发框架</li><li>高度封装了 http 模块</li><li>更加专注于业务，而非底层细节</li><li>知其所以然</li></ul></li><li><p>增删改查</p><ul><li>使用文件来保存数据（锻炼异步编码）</li></ul></li><li><p>MongoDB</p><ul><li>（所有方法都封装好了</li></ul></li></ul><h2 id="什么是模块化"><a href="#什么是模块化" class="headerlink" title="什么是模块化"></a>什么是模块化</h2><ol><li>文件作用域</li><li>通信规则<ul><li>加载require</li><li>导出exports</li></ul></li></ol><h2 id="CommonJS模块规范"><a href="#CommonJS模块规范" class="headerlink" title="CommonJS模块规范"></a>CommonJS模块规范</h2><p>在node中的JavaScript有个重要的概念：模块系统</p><ul><li>模块作用域 </li><li>使用 require方法加载模块</li><li>使用exports接口对象来导出模块中的成员</li></ul><h3 id="加载-require"><a href="#加载-require" class="headerlink" title="加载 require"></a>加载 <code>require</code></h3><p>语法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> 自定义变量名 = <span class="built_in">require</span>(<span class="string">'模块'</span>)</span><br></pre></td></tr></table></figure><p>作用：</p><ol><li><p>执行被加载模块中的代码</p><ol start="2"><li>得到被加载模块中的<code>exports</code>导出的接口对象</li></ol></li></ol><h3 id="导出-exports"><a href="#导出-exports" class="headerlink" title="导出 exports"></a>导出 <code>exports</code></h3><ul><li><p>node中是模块作用域，默认文件中所有的成员只在当前文件模块有效</p></li><li><p>对于希望其他模块访问的成员，需要把公开的成员挂载到 <code>exports</code> 接口对象中就可以了</p><ul><li><p>导出多个成员</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">exports.a = <span class="number">123</span></span><br><span class="line">  exports.b = <span class="string">'hello'</span></span><br><span class="line">  exports.c = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">  exports.d = &#123;</span><br><span class="line">  foo : <span class="string">'bar'</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>导出单个成员（拿到的是函数或者字符串）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> (<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>  这种情况下面会覆盖前面的</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> (<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="string">'hello'</span></span><br></pre></td></tr></table></figure><h3 id="module-exports-和-exports-的区别"><a href="#module-exports-和-exports-的区别" class="headerlink" title="module.exports 和 exports 的区别"></a>module.exports 和 exports 的区别</h3><ul><li>每个模块中都有一个 module 对象</li><li>module 对象中有一个 exports 对象</li><li>我们可以把需要导出的成员都挂载到 module.exports 接口对象中</li><li>也就是：<code>moudle.exports.xxx = xxx</code> 的方式</li><li>但是每次都 <code>moudle.exports.xxx = xxx</code> 很麻烦，点儿的太多了</li><li>所以 Node 为了你方便，同时在每一个模块中都提供了一个成员叫：<code>exports</code></li><li><code>exports === module.exports</code> 结果为  <code>true</code>s</li><li>所以对于：<code>moudle.exports.xxx = xxx</code> 的方式 完全可以：<code>expots.xxx = xxx</code></li><li>当一个模块需要导出单个成员的时候，这个时候必须使用：<code>module.exports = xxx</code> 的方式</li><li>不要使用 <code>exports = xxx</code> 不管用</li><li>因为每个模块最终向外 <code>return</code> 的是 <code>module.exports</code></li><li>而 <code>exports</code> 只是 <code>module.exports</code> 的一个引用</li><li>所以即便你为 <code>exports = xx</code> 重新赋值，也不会影响 <code>module.exports</code></li><li>但是有一种赋值方式比较特殊：<code>exports = module.exports</code> 这个用来重新建立引用关系的</li></ul><h3 id="require-方法加载规则"><a href="#require-方法加载规则" class="headerlink" title="require 方法加载规则"></a>require 方法加载规则</h3><ul><li>优先从缓存加载 ——main加载a 和 b | a中加载b | main不会加载b了 只有b导出的内容</li><li>判断模块标识符<ul><li>核心模块   （只需要名字fs/http/os/url）</li><li>路径形式的模块 （.js后缀名可以省略）</li><li>第三方模块 (必须npm下载 使用包名加载 )</li><li>node_modules</li></ul></li></ul><h3 id="package-json-包描述文件（类似产品说明书）"><a href="#package-json-包描述文件（类似产品说明书）" class="headerlink" title="package.json 包描述文件（类似产品说明书）"></a>package.json 包描述文件（类似产品说明书）</h3><ul><li><p>可以通过npm init自动初始化出来</p></li><li><p>npm install 包名（建议加上–save）</p></li><li><p>dependencies 选项的作用 （保存第三方包的依赖信息）(npm install 找回依赖的包)</p></li></ul><h3 id="npm-常用命令"><a href="#npm-常用命令" class="headerlink" title="npm 常用命令"></a>npm 常用命令</h3><p>npmjs网站上传包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm --version // 查看版本</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --global npm //升级npm</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init -y //快速生成</span><br></pre></td></tr></table></figure> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm stall 包名</span><br></pre></td></tr></table></figure><blockquote><ol><li>npm i 包名 （简写）</li><li>只下载</li></ol></blockquote> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm stall 包名 --save</span><br></pre></td></tr></table></figure><blockquote><ol><li>下载并保存依赖项 生成dependencies 选项</li><li>npm i -S 包名 （简写）</li></ol></blockquote> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall 包名  //只删除，有依赖项会依然保存</span><br></pre></td></tr></table></figure> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall --save 包名</span><br></pre></td></tr></table></figure><blockquote><ol><li>删除的同时去除依赖信息</li><li>npm un -S 包名 （简写）</li></ol></blockquote> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm help //查看使用帮助</span><br></pre></td></tr></table></figure> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm 命令 help //查看指定命令的使用帮助</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --global cnpm //解决被墙的问题使用cnpm</span><br></pre></td></tr></table></figure><blockquote><p>–global 安装全局 在任意目录都可以</p><p>使用方法执行命令 替换 npm为 cnpm</p><p>如果不想下载可通过下面这个配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; npm config set registry https://registry.npm.taobao.org</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>查看npm 配置信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; cnpm config list</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h3 id="Express-基本使用"><a href="#Express-基本使用" class="headerlink" title="Express 基本使用"></a>Express 基本使用</h3><h3 id="301-和-302-的区别"><a href="#301-和-302-的区别" class="headerlink" title="301 和 302 的区别"></a>301 和 302 的区别</h3><p>如何在 Node 中实现服务器重定向</p><ul><li>header(‘location’)<ul><li>301 永久重定向 浏览器会记住<ul><li>a.com b.com</li><li>a 浏览器不会请求 a 了</li><li>直接去跳到 b 了</li></ul></li><li>302 临时重定向 浏览器不记忆<ul><li>a.com b.com</li><li>a.com 还会请求 a</li><li>a 告诉浏览器你往 b</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node模块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node核心模块</title>
      <link href="/2019/09/02/node%E6%A0%B8%E5%BF%83%E6%A8%A1%E5%9D%97/"/>
      <url>/2019/09/02/node%E6%A0%B8%E5%BF%83%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h1><ul><li>Node.js 是什么<ul><li>JavaScript 运行时</li><li>既不是语言，也不是框架，它是一个平台</li></ul></li><li>Node.js 中的 JavaScript<ul><li>没有 BOM、DOM</li><li>EcmaScript 基本的 JavaScript 语言部分</li><li>在 Node 中为 JavaScript 提供了一些服务器级别的 API<ul><li>文件操作的能力</li><li>http 服务的能力</li></ul></li></ul></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li><p>Node 中的 JavaScript</p><ul><li><p>EcmaScript</p><ul><li>变量</li><li>方法</li><li>数据类型</li><li>内置对象</li><li>Array</li><li>Object</li><li>Date</li><li>Math</li></ul></li><li><p>模块系统</p><ul><li>在 Node 中没有全局作用域的概念</li><li>在 Node 中，只能通过 require 方法来加载执行多个 JavaScript 脚本文件</li><li>require 加载只能是执行其中的代码，文件与文件之间由于是模块作用域，所以不会有污染的问题<blockquote><ol><li>模块完全是封闭的</li><li>外部无法访问内部</li><li>内部也无法访问外部</li></ol></blockquote></li><li>模块作用域固然带来了一些好处，可以加载执行多个文件，可以完全避免变量命名冲突污染的问题</li><li>但是某些情况下，模块与模块是需要进行通信的</li><li>在每个模块中，都提供了一个对象：<code>exports</code></li><li>该对象默认是一个空对象</li><li>你要做的就是把需要被外部访问使用的成员手动的挂载到 <code>exports</code> 接口对象中</li><li>然后谁来 <code>require</code> 这个模块，谁就可以得到模块内部的 <code>exports</code> 接口对象</li><li>还有其它的一些规则，具体后面讲，以及如何在项目中去使用这种编程方式，会通过后面的案例来处理</li></ul></li><li><p>核心模块</p><ul><li><p>核心模块是由 Node 提供的一个个的具名的模块，它们都有自己特殊的名称标识，例如</p><blockquote><ol><li>fs 文件操作模块</li><li>http 网络服务构建模块</li><li>os 操作系统信息模块</li><li>path 路径处理模块</li><li>。。。。</li></ol></blockquote></li><li><p>所有核心模块在使用的时候都必须手动的先使用 <code>require</code> 方法来加载，然后才可以使用，例如：</p><ul><li><code>var fs = require(&#39;fs&#39;)</code></li></ul></li></ul></li></ul></li><li><p>http</p><ul><li>require</li><li>端口号<ul><li>ip 地址定位计算机</li><li>端口号定位具体的应用程序</li></ul></li><li>Content-Type<ul><li>服务器最好把每次响应的数据是什么内容类型都告诉客户端，而且要正确的告诉</li><li>不同的资源对应的 Content-Type 是不一样，具体参照：<a href="http://tool.oschina.net/commons" target="_blank" rel="noopener">http://tool.oschina.net/commons</a></li><li>对于文本类型的数据，最好都加上编码，目的是为了防止中文解析乱码问题</li></ul></li><li>通过网络发送文件<ul><li>发送的并不是文件，本质上来讲发送是文件的内容</li><li>当浏览器收到服务器响应内容之后，就会根据你的 Content-Type 进行对应的解析处理</li></ul></li></ul></li></ul><h3 id="Node中的其他成员-dirname-和-filename"><a href="#Node中的其他成员-dirname-和-filename" class="headerlink" title="Node中的其他成员  __dirname 和  __filename"></a>Node中的其他成员  __dirname 和  __filename</h3><p>每个模块中除了require、exports 还有俩个特殊成员</p><ul><li>__dirname 可以用来获取当前文件模块所属目录的绝对路径</li><li>__filename 可以用来获取当前文件的绝对路径</li></ul><ul><li><h3 id="所有的文件操作都使用动态的绝对路径-path-join-dirname-‘public’"><a href="#所有的文件操作都使用动态的绝对路径-path-join-dirname-‘public’" class="headerlink" title="所有的文件操作都使用动态的绝对路径 path.join(__dirname, ‘public’)"></a>所有的文件操作都使用动态的绝对路径 path.join(__dirname, ‘public’)</h3></li><li><h3 id="模块中的路径不影响"><a href="#模块中的路径不影响" class="headerlink" title="模块中的路径不影响"></a>模块中的路径不影响</h3></li></ul><h3 id="path模块"><a href="#path模块" class="headerlink" title="path模块"></a>path模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var path = require(&apos;path&apos;)</span><br></pre></td></tr></table></figure><p><a href="https://nodejs.org/dist/latest-v12.x/docs/api/path.html" target="_blank" rel="noopener">官方文档</a></p><p>path.basename</p><ul><li>获取一个路径的文件名（包含扩展名）</li></ul><p>path.dirname(path)</p><ul><li>获取一个路径中的目录部分</li></ul><p>path.extname(path</p><ul><li>获取一个路径中的扩展名部分</li></ul><p>path.isAbsolute</p><ul><li>判断一个路径是否是绝对路径</li></ul><p>path.join</p><ul><li>拼接路径</li></ul><p>path.parse</p><ul><li><p>获取一个路径中的转化为对象</p></li><li><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &#123; root: '/',</span></span><br><span class="line"><span class="comment">//   dir: '/home/user/dir',</span></span><br><span class="line"><span class="comment">//   base: 'file.txt',</span></span><br><span class="line"><span class="comment">//   ext: '.txt',</span></span><br><span class="line"><span class="comment">//   name: 'file' &#125;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="fs-文件操作模块"><a href="#fs-文件操作模块" class="headerlink" title="fs 文件操作模块"></a>fs 文件操作模块</h3><blockquote><ol><li>fs 是 file-system 的简写，就是文件系统的意思</li><li>在 Node 中如果想要进行文件操作，就必须引入 fs 这个核心模块</li><li>在 fs 这个核心模块中，就提供了所有的文件操作相关的 API</li><li>例如：fs.readFile 就是用来读取文件的</li><li>例如：fs.writeFile 就是用来写入文件的</li></ol></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 使用 require 方法加载 fs 核心模块</span></span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 读取文件</span></span><br><span class="line"><span class="comment">//    第一个参数就是要读取的文件路径</span></span><br><span class="line"><span class="comment">//    第二个参数是一个回调函数</span></span><br><span class="line"><span class="comment">//          </span></span><br><span class="line"><span class="comment">//        成功</span></span><br><span class="line"><span class="comment">//          data 数据</span></span><br><span class="line"><span class="comment">//          error null</span></span><br><span class="line"><span class="comment">//        失败</span></span><br><span class="line"><span class="comment">//          data undefined没有数据</span></span><br><span class="line"><span class="comment">//          error 错误对象</span></span><br><span class="line"></span><br><span class="line">fs.readFile(<span class="string">'./data/hello.txt'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">error, data</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// &lt;Buffer 68 65 6c 6c 6f 20 6e 6f 64 65 6a 73 0d 0a&gt;</span></span><br><span class="line">  <span class="comment">// 文件中存储的其实都是二进制数据 0 1</span></span><br><span class="line">  <span class="comment">// 这里为什么看到的不是 0 和 1 呢？原因是二进制转为 16 进制了</span></span><br><span class="line">  <span class="comment">// 但是无论是二进制01还是16进制，人类都不认识</span></span><br><span class="line">  <span class="comment">// 所以我们可以通过 toString 方法把其转为我们能认识的字符</span></span><br><span class="line">  <span class="comment">// 在这里就可以通过判断 error 来确认是否有错误发生</span></span><br><span class="line">  <span class="keyword">if</span> (error) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'读取文件失败了'</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data.toString())</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第一个参数：文件路径</span></span><br><span class="line"><span class="comment">// 第二个参数：文件内容</span></span><br><span class="line"><span class="comment">// 第三个参数：回调函数</span></span><br><span class="line"><span class="comment">//    error</span></span><br><span class="line"><span class="comment">//    </span></span><br><span class="line"><span class="comment">//    成功：</span></span><br><span class="line"><span class="comment">//      文件写入成功</span></span><br><span class="line"><span class="comment">//      error 是 null</span></span><br><span class="line"><span class="comment">//    失败：</span></span><br><span class="line"><span class="comment">//      文件写入失败</span></span><br><span class="line"><span class="comment">//      error 就是错误对象</span></span><br><span class="line"></span><br><span class="line">fs.writeFile(<span class="string">'./data/你好a.md'</span>, <span class="string">'大家好，给大家介绍一下，我是Node.js'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// console.log('文件写入成功')</span></span><br><span class="line">  <span class="comment">// console.log(error)</span></span><br><span class="line">  <span class="keyword">if</span> (error) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'写入失败'</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'写入成功了'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="使用-Node-构建一个-Web-服务器"><a href="#使用-Node-构建一个-Web-服务器" class="headerlink" title="使用 Node 构建一个 Web 服务器"></a>使用 Node 构建一个 Web 服务器</h3><blockquote><ol><li>使用 Node 非常轻松的构建一个 Web 服务器</li><li>在node 中专门提供了一个核心模块：http</li><li>这个模块的职责就是帮你创建编写服务器的</li></ol></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 加载 http 核心模块</span></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 使用 http.createServer() 方法创建一个 Web 服务器</span></span><br><span class="line"><span class="comment">//    返回一个 Server 实例</span></span><br><span class="line"><span class="keyword">var</span> server = http.createServer()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 服务器要干嘛？</span></span><br><span class="line"><span class="comment">//    提供服务：对 数据的服务</span></span><br><span class="line"><span class="comment">//    发请求</span></span><br><span class="line"><span class="comment">//    接收请求</span></span><br><span class="line"><span class="comment">//    处理请求</span></span><br><span class="line"><span class="comment">//    给个反馈（发送响应）</span></span><br><span class="line"><span class="comment">//    注册 request 请求事件</span></span><br><span class="line"><span class="comment">//    当客户端请求过来，就会自动触发服务器的 request 请求事件，然后执行第二个参数：回调处理函数</span></span><br><span class="line"><span class="comment">//  每次请求就会console.log</span></span><br><span class="line">server.on(<span class="string">'request'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'收到客户端的请求了'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4. 绑定端口号，启动服务器</span></span><br><span class="line">server.listen(<span class="number">3000</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'服务器启动成功了，可以通过 http://127.0.0.1:3000/ 来进行访问'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server = http.createServer()</span><br><span class="line"></span><br><span class="line"><span class="comment">// request 请求事件处理函数，需要接收两个参数：</span></span><br><span class="line"><span class="comment">//    Request 请求对象</span></span><br><span class="line"><span class="comment">//        请求对象可以用来获取客户端的一些请求信息，例如请求路径</span></span><br><span class="line"><span class="comment">//    Response 响应对象</span></span><br><span class="line"><span class="comment">//        响应对象可以用来给客户端发送响应消息</span></span><br><span class="line">server.on(<span class="string">'request'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">request, response</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// http://127.0.0.1:3000/ ---- /</span></span><br><span class="line">  <span class="comment">// http://127.0.0.1:3000/a ---- /a</span></span><br><span class="line">  <span class="comment">// http://127.0.0.1:3000/foo/b ---- /foo/b</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'收到客户端的请求了，请求路径是：'</span> + request.url)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// response 对象有一个方法：write 可以用来给客户端发送响应数据</span></span><br><span class="line">  <span class="comment">// write 可以使用多次，但是最后一定要使用 end 来结束响应，否则客户端会一直等待</span></span><br><span class="line">  response.write(<span class="string">'hello'</span>)</span><br><span class="line">  response.write(<span class="string">' nodejs'</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 告诉客户端，我的话说完了，你可以呈递给用户了</span></span><br><span class="line">  response.end()</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 由于现在我们的服务器的能力还非常的弱，无论是什么请求，都只能响应 hello nodejs</span></span><br><span class="line">  <span class="comment">// 思考：</span></span><br><span class="line">  <span class="comment">//  我希望当请求不同的路径的时候响应不同的结果</span></span><br><span class="line">  <span class="comment">//  例如：</span></span><br><span class="line">  <span class="comment">//  /index</span></span><br><span class="line">  <span class="comment">//  /login 登陆</span></span><br><span class="line">  <span class="comment">//  /register 注册</span></span><br><span class="line">  <span class="comment">//  /haha 哈哈哈</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">server.listen(<span class="number">3000</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'服务器启动成功了，可以通过 http://127.0.0.1:3000/ 来进行访问'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 创建 Server</span></span><br><span class="line"><span class="keyword">var</span> server = http.createServer()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 监听 request 请求事件，设置请求处理函数</span></span><br><span class="line">server.on(<span class="string">'request'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'收到请求了，请求路径是：'</span> + req.url)</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'请求我的客户端的地址是：'</span>, req.socket.remoteAddress, req.socket.remotePort)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// res.write('hello')</span></span><br><span class="line">  <span class="comment">// res.write(' world')</span></span><br><span class="line">  <span class="comment">// res.end()</span></span><br><span class="line">  <span class="comment">// 上面的方式比较麻烦，推荐使用更简单的方式，直接 end 的同时发送响应数据</span></span><br><span class="line">    </span><br><span class="line">  <span class="comment">// res.end('hello nodejs')</span></span><br><span class="line">  <span class="comment">// 根据不同的请求路径发送不同的响应结果</span></span><br><span class="line">  <span class="comment">// 1. 获取请求路径</span></span><br><span class="line">  <span class="comment">//    req.url 获取到的是端口号之后的那一部分路径</span></span><br><span class="line">  <span class="comment">//    也就是说所有的 url 都是以 / 开头的</span></span><br><span class="line">  <span class="comment">// 2. 判断路径处理响应</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> url = req.url</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (url === <span class="string">'/'</span>) &#123;</span><br><span class="line">    res.end(<span class="string">'index page'</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (url === <span class="string">'/login'</span>) &#123;</span><br><span class="line">    res.end(<span class="string">'login page'</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (url === <span class="string">'/products'</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> products = [&#123;</span><br><span class="line">        name: <span class="string">'苹果 X'</span>,</span><br><span class="line">        price: <span class="number">8888</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        name: <span class="string">'菠萝 X'</span>,</span><br><span class="line">        price: <span class="number">5000</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        name: <span class="string">'小辣椒 X'</span>,</span><br><span class="line">        price: <span class="number">1999</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 响应内容只能是二进制数据或者字符串</span></span><br><span class="line">    <span class="comment">//  数字</span></span><br><span class="line">    <span class="comment">//  对象</span></span><br><span class="line">    <span class="comment">//  数组</span></span><br><span class="line">    <span class="comment">//  布尔值</span></span><br><span class="line">    res.end(<span class="built_in">JSON</span>.stringify(products))</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.end(<span class="string">'404 Not Found.'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 绑定端口号，启动服务</span></span><br><span class="line">server.listen(<span class="number">3000</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'服务器启动成功，可以访问了。。。'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="HTTP-Content-type"><a href="#HTTP-Content-type" class="headerlink" title="HTTP Content-type"></a>HTTP Content-type</h3><blockquote><ul><li><h3 id="setHeader方法解决显示乱码问题"><a href="#setHeader方法解决显示乱码问题" class="headerlink" title="setHeader方法解决显示乱码问题"></a>setHeader方法解决显示乱码问题</h3></li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server = http.createServer()</span><br><span class="line"></span><br><span class="line">server.on(<span class="string">'request'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 在服务端默认发送的数据，其实是 utf8 编码的内容</span></span><br><span class="line">  <span class="comment">// 但是浏览器不知道你是 utf8 编码的内容</span></span><br><span class="line">  <span class="comment">// 浏览器在不知道服务器响应内容的编码的情况下会按照当前操作系统的默认编码去解析</span></span><br><span class="line">  <span class="comment">// 中文操作系统默认是 gbk</span></span><br><span class="line">  <span class="comment">// 解决方法就是正确的告诉浏览器我给你发送的内容是什么编码的</span></span><br><span class="line">  <span class="comment">// 在 http 协议中，Content-Type 就是用来告知对方我给你发送的数据内容是什么类型</span></span><br><span class="line">  <span class="comment">// res.setHeader('Content-Type', 'text/plain; charset=utf-8')</span></span><br><span class="line">  <span class="comment">// res.end('hello 世界')</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> url = req.url</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (url === <span class="string">'/plain'</span>) &#123;</span><br><span class="line">    <span class="comment">// text/plain 就是普通文本</span></span><br><span class="line">    res.setHeader(<span class="string">'Content-Type'</span>, <span class="string">'text/plain; charset=utf-8'</span>)</span><br><span class="line">    res.end(<span class="string">'hello 世界'</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (url === <span class="string">'/html'</span>) &#123;</span><br><span class="line">    <span class="comment">// 如果你发送的是 html 格式的字符串，则也要告诉浏览器我给你发送是 text/html 格式的内容</span></span><br><span class="line">    res.setHeader(<span class="string">'Content-Type'</span>, <span class="string">'text/html; charset=utf-8'</span>)</span><br><span class="line">    res.end(<span class="string">'&lt;p&gt;hello html &lt;a href=""&gt;点我&lt;/a&gt;&lt;/p&gt;'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">server.listen(<span class="number">3000</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Server is running...'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><a href="http://tool.oschina.net/commons" target="_blank" rel="noopener">HTTP Content-type表</a></p><h3 id="os-操作系统信息模块"><a href="#os-操作系统信息模块" class="headerlink" title="os 操作系统信息模块"></a>os 操作系统信息模块</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用来获取机器信息的</span></span><br><span class="line"><span class="keyword">var</span> os = <span class="built_in">require</span>(<span class="string">'os'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用来操作路径的</span></span><br><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取当前机器的 CPU 信息</span></span><br><span class="line"><span class="built_in">console</span>.log(os.cpus())</span><br><span class="line"></span><br><span class="line"><span class="comment">// memory 内存</span></span><br><span class="line"><span class="built_in">console</span>.log(os.totalmem())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取一个路径中的扩展名部分</span></span><br><span class="line"><span class="comment">// extname extension name</span></span><br><span class="line"><span class="built_in">console</span>.log(path.extname(<span class="string">'c:/a/b/c/d/hello.txt'</span>))</span><br></pre></td></tr></table></figure><h3 id="结合-fs-发送文件中的数据"><a href="#结合-fs-发送文件中的数据" class="headerlink" title="结合 fs 发送文件中的数据"></a>结合 fs 发送文件中的数据</h3><blockquote><ol><li>结合 fs 发送文件中的数据</li><li>Content-Type <a href="http://tool.oschina.net/commons" target="_blank" rel="noopener">http://tool.oschina.net/commons</a></li><li>不同的资源对应的 Content-Type 是不一样的</li><li>图片不需要指定编码</li><li>一般只为字符数据才指定编码</li></ol></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server = http.createServer()</span><br><span class="line"></span><br><span class="line">server.on(<span class="string">'request'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// / index.html</span></span><br><span class="line">  <span class="keyword">var</span> url = req.url</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (url === <span class="string">'/'</span>) &#123;</span><br><span class="line">    <span class="comment">// 肯定不这么干</span></span><br><span class="line">    <span class="comment">// res.end('&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="UTF-8"&gt;&lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;首页&lt;/h1&gt;&lt;/body&gt;/html&gt;')</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 我们要发送的还是在文件中的内容</span></span><br><span class="line">fs.readFile(<span class="string">'./resource/index.html'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (err) &#123;</span><br><span class="line">    res.setHeader(<span class="string">'Content-Type'</span>, <span class="string">'text/plain; charset=utf-8'</span>)</span><br><span class="line">    res.end(<span class="string">'文件读取失败，请稍后重试！'</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// data 默认是二进制数据，可以通过 .toString 转为咱们能识别的字符串</span></span><br><span class="line">    <span class="comment">// res.end() 支持两种数据类型，一种是二进制，一种是字符串</span></span><br><span class="line">    res.setHeader(<span class="string">'Content-Type'</span>, <span class="string">'text/html; charset=utf-8'</span>)</span><br><span class="line">    res.end(data)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (url === <span class="string">'/xiaoming'</span>) &#123;</span><br><span class="line">    <span class="comment">// url：统一资源定位符</span></span><br><span class="line">    <span class="comment">// 一个 url 最终其实是要对应到一个资源的</span></span><br><span class="line">    fs.readFile(<span class="string">'./resource/ab2.jpg'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        res.setHeader(<span class="string">'Content-Type'</span>, <span class="string">'text/plain; charset=utf-8'</span>)</span><br><span class="line">        res.end(<span class="string">'文件读取失败，请稍后重试！'</span>)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// data 默认是二进制数据，可以通过 .toString 转为咱们能识别的字符串</span></span><br><span class="line">        <span class="comment">// res.end() 支持两种数据类型，一种是二进制，一种是字符串</span></span><br><span class="line">        <span class="comment">// 图片就不需要指定编码了，因为我们常说的编码一般指的是：字符编码</span></span><br><span class="line">        res.setHeader(<span class="string">'Content-Type'</span>, <span class="string">'image/jpeg'</span>)</span><br><span class="line">        res.end(data)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">server.listen(<span class="number">3000</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Server is running...'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="像Apache一样"><a href="#像Apache一样" class="headerlink" title="像Apache一样"></a><strong>像Apache一样</strong></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>)</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server = http.createServer()</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> wwwDir = <span class="string">'D:/Movie/www'</span></span><br><span class="line"></span><br><span class="line">server.on(<span class="string">'request'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> url = req.url</span><br><span class="line">  <span class="comment">// / index.html</span></span><br><span class="line">  <span class="comment">// /a.txt wwwDir + /a.txt</span></span><br><span class="line">  <span class="comment">// /apple/login.html wwwDir + /apple/login.html</span></span><br><span class="line">  <span class="comment">// /img/ab1.jpg wwwDir + /img/ab1.jpg</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> filePath = <span class="string">'/index.html'</span></span><br><span class="line">  <span class="keyword">if</span> (url !== <span class="string">'/'</span>) &#123;</span><br><span class="line">    filePath = url</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  fs.readFile(wwwDir + filePath, <span class="function"><span class="keyword">function</span> (<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.end(<span class="string">'404 Not Found.'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    res.end(data)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 绑定端口号，启动服务</span></span><br><span class="line">server.listen(<span class="number">3000</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'running...'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node核心模块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>axios方法深入</title>
      <link href="/2019/09/01/axios%E6%96%B9%E6%B3%95%E6%B7%B1%E5%85%A5/"/>
      <url>/2019/09/01/axios%E6%96%B9%E6%B3%95%E6%B7%B1%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="axios实例配置"><a href="#axios实例配置" class="headerlink" title="axios实例配置"></a>axios实例配置</h1><h4 id="config基本内容"><a href="#config基本内容" class="headerlink" title="config基本内容"></a>config基本内容</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">axios.create(&#123;</span><br><span class="line">      baseURL:<span class="string">'http://localhost:8080'</span>,</span><br><span class="line">      timeout:<span class="number">1000</span>,<span class="comment">//请求超时时长（ms）</span></span><br><span class="line">      url:<span class="string">'/data.json'</span>,<span class="comment">//请求路径</span></span><br><span class="line">      method:<span class="string">'get'</span>, <span class="comment">//请求方法post、put、patch、delete</span></span><br><span class="line">      headers: &#123;</span><br><span class="line">        token: <span class="string">''</span></span><br><span class="line">      &#125;,<span class="comment">//设置请求头</span></span><br><span class="line">      params:<span class="string">''</span>,<span class="comment">//请求参数拼接在url上</span></span><br><span class="line">      data:<span class="string">''</span><span class="comment">//请求参数放在请求体里</span></span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><h4 id="1-axios-全局配置-优先级最低"><a href="#1-axios-全局配置-优先级最低" class="headerlink" title="//1.axios 全局配置  优先级最低"></a>//1.axios 全局配置  优先级最低</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">axios.defaults.timeout = 1000</span><br><span class="line">axios.defaults.url = &apos;http://localhost:8080&apos;</span><br></pre></td></tr></table></figure><h4 id="2-axios-实例配置-优先级中"><a href="#2-axios-实例配置-优先级中" class="headerlink" title="//2.axios 实例配置  优先级中"></a>//2.axios 实例配置  优先级中</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let instance = axios.create()</span><br><span class="line">instance.defaults.timeout = 3000</span><br></pre></td></tr></table></figure><h4 id="3-axios-请求配置-优先级最高"><a href="#3-axios-请求配置-优先级最高" class="headerlink" title="//3.axios 请求配置  优先级最高"></a>//3.axios 请求配置  优先级最高</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">instance.get(&apos;data.json&apos;,&#123;</span><br><span class="line">  timeout:6000</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="实际开发的用法"><a href="#实际开发的用法" class="headerlink" title="实际开发的用法"></a>实际开发的用法</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> instance = axios.create(&#123;</span><br><span class="line">     baseURL:<span class="string">'http://localhost:8080'</span>,</span><br><span class="line">     timeout:<span class="number">1000</span></span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">instance.get(<span class="string">'/testurl'</span>,&#123;</span><br><span class="line">  params:&#123;&#125;</span><br><span class="line">&#125;).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(res)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//用了 baseURL timeout method url params</span></span><br></pre></td></tr></table></figure><h1 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h1><blockquote><h4 id="在请求或响应贝处理之前拦截它们"><a href="#在请求或响应贝处理之前拦截它们" class="headerlink" title="在请求或响应贝处理之前拦截它们"></a>在请求或响应贝处理之前拦截它们</h4></blockquote><h4 id="请求拦截器"><a href="#请求拦截器" class="headerlink" title="请求拦截器"></a>请求拦截器</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">axios.interceptors.request.use(<span class="function"><span class="params">config</span>=&gt;</span>&#123;</span><br><span class="line">      <span class="comment">//在发送请求前做些什么</span></span><br><span class="line">      <span class="keyword">return</span> config</span><br><span class="line">    &#125;,err=&gt;&#123;</span><br><span class="line">      <span class="comment">//在请求错误的时候做些什么</span></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(err)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><h4 id="响应拦截器"><a href="#响应拦截器" class="headerlink" title="响应拦截器"></a>响应拦截器</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">axios.interceptors.response.use(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">     <span class="comment">//请求成功对响应数据做处理</span></span><br><span class="line">     <span class="keyword">return</span> res</span><br><span class="line">   &#125;,err=&gt;&#123;</span><br><span class="line">     <span class="comment">//响应错误</span></span><br><span class="line">     <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(err)</span><br><span class="line">   &#125;)</span><br><span class="line"></span><br><span class="line"> axios.get(<span class="string">'/data.json'</span>).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(res)</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><h4 id="取消拦截器"><a href="#取消拦截器" class="headerlink" title="取消拦截器"></a>取消拦截器</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> test = axios.interceptors.request.use(<span class="function"><span class="params">config</span>=&gt;</span>&#123;</span><br><span class="line">     config.headers=&#123;</span><br><span class="line">         auth:<span class="literal">true</span></span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> config</span><br><span class="line">   &#125;)</span><br><span class="line">   <span class="comment">//取消方法</span></span><br><span class="line">   axios.interceptors.request.eject(test)</span><br></pre></td></tr></table></figure><h4 id="实际开发—登入状态（token-’’）"><a href="#实际开发—登入状态（token-’’）" class="headerlink" title="实际开发—登入状态（token:’’）"></a>实际开发—登入状态（token:’’）</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> instance = axios.create(&#123;&#125;)</span><br><span class="line">   instance.interceptors.request.use(<span class="function"><span class="params">config</span>=&gt;</span>&#123;</span><br><span class="line">     config.headers.token = <span class="string">''</span></span><br><span class="line">     <span class="keyword">return</span> config</span><br><span class="line">   &#125;)</span><br><span class="line">   <span class="comment">//不需要登入的接口</span></span><br><span class="line">   <span class="keyword">let</span> newInstance = axios.create(&#123;&#125;)</span><br></pre></td></tr></table></figure><h4 id="移动端开发-隐藏弹窗"><a href="#移动端开发-隐藏弹窗" class="headerlink" title="//移动端开发(隐藏弹窗)"></a>//移动端开发(隐藏弹窗)</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> instance_phone = axios.create(&#123;&#125;)</span><br><span class="line">   instance.interceptors.request.use(<span class="function"><span class="params">config</span>=&gt;</span>&#123;</span><br><span class="line">     $(<span class="string">'#mod'</span>).show()</span><br><span class="line">     <span class="keyword">return</span> config</span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">instance.interceptors.response.use(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">  $(<span class="string">'#mod'</span>).hide()</span><br><span class="line">  <span class="keyword">return</span> res</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> instance = axios.create(&#123;&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">instance.interceptors.request.use(<span class="function"><span class="params">config</span>=&gt;</span>&#123;</span><br><span class="line">     <span class="keyword">return</span> config</span><br><span class="line">   &#125;,err=&gt;&#123;</span><br><span class="line">     <span class="comment">//在请求错误的时候做些什么 错误码 401超时 403没找到界面</span></span><br><span class="line">     $(<span class="string">'#modal'</span>).show()</span><br><span class="line">     setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">       $(<span class="string">'#modal'</span>).hide()</span><br><span class="line">     &#125;, <span class="number">2000</span>);</span><br><span class="line">     <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(err)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">axios.interceptors.response.use(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">//请求成功对响应数据做处理</span></span><br><span class="line">  <span class="keyword">return</span> res</span><br><span class="line">&#125;,err=&gt;&#123;</span><br><span class="line">  <span class="comment">//响应错误处理 一般http代码500 系统错误 502系统重启</span></span><br><span class="line">  $(<span class="string">'#modal'</span>).show()</span><br><span class="line">  setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    $(<span class="string">'#modal'</span>).hide()</span><br><span class="line">  &#125;, <span class="number">2000</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(err)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">axios.get(<span class="string">'/data.json'</span>).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(res)</span><br><span class="line">&#125;).catch(<span class="function"><span class="params">err</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> axios </category>
          
      </categories>
      
      
        <tags>
            
            <tag> axios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>axios方法的基本使用</title>
      <link href="/2019/08/29/axios%E6%96%B9%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/08/29/axios%E6%96%B9%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="axios请求方法"><a href="#axios请求方法" class="headerlink" title="axios请求方法"></a>axios请求方法</h1><blockquote><ol><li>get: 获取数据</li><li>post: 提交数据（表单提交+文件上传）</li><li>put: 更新数据（所有数据推送到后端）</li><li>patch: 更新数据（只将修改的数据推送到后端）</li><li>delete: 删除数据</li></ol></blockquote><h3 id="具体由后端定义"><a href="#具体由后端定义" class="headerlink" title="具体由后端定义"></a>具体由后端定义</h3><h3 id="1-get方法的使用-2个参数"><a href="#1-get方法的使用-2个参数" class="headerlink" title="1.get方法的使用(2个参数)"></a>1.get方法的使用(2个参数)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axios.get(&apos;url&apos;,config)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">created() &#123;</span><br><span class="line">  axios.get(<span class="string">'/data.json'</span>).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(res)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">axios(&#123;</span><br><span class="line">     method:<span class="string">'get'</span>,</span><br><span class="line">     url:<span class="string">'/data.json'</span>,</span><br><span class="line">   &#125;).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(res)</span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure><blockquote><p><strong>请求id=12</strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">created() &#123;</span><br><span class="line">   axios.get(<span class="string">'/data.json'</span>,&#123;</span><br><span class="line">       params:&#123;</span><br><span class="line">       id:<span class="number">12</span></span><br><span class="line">     &#125;</span><br><span class="line">   &#125;).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(res)</span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">axios(&#123;</span><br><span class="line">     method:<span class="string">'get'</span>,</span><br><span class="line">     url:<span class="string">'/data.json'</span>,</span><br><span class="line">     params:&#123;</span><br><span class="line">       id:<span class="number">12</span></span><br><span class="line">     &#125;</span><br><span class="line">   &#125;).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(res)</span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure><blockquote><p><strong><a href="http://localhost:8080/data.json?id=12" target="_blank" rel="noopener">http://localhost:8080/data.json?id=12</a></strong>请求地址</p></blockquote><h3 id="2-post方法的使用"><a href="#2-post方法的使用" class="headerlink" title="2.post方法的使用"></a>2.post方法的使用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axios.post(<span class="string">'/post'</span>,&#123;&#125;,config) 三参数</span><br></pre></td></tr></table></figure><blockquote><p><strong>from-data 表单提交（图片/文件上传）</strong></p><p><strong>applicition/json</strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//applicition/json</span></span><br><span class="line"><span class="keyword">let</span> data = &#123;</span><br><span class="line">  id:<span class="number">12</span></span><br><span class="line">&#125;</span><br><span class="line">axios.post(<span class="string">'/post'</span>,data).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line"> <span class="built_in">console</span>.log(res)      </span><br><span class="line">&#125;)</span><br><span class="line">axios(&#123;</span><br><span class="line">  method:<span class="string">'post'</span>,</span><br><span class="line">  url:<span class="string">'/post'</span>,</span><br><span class="line">  data:data</span><br><span class="line">&#125;).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line"> <span class="built_in">console</span>.log(res)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//from-data 表单提交（图片/文件上传）</span></span><br><span class="line"><span class="keyword">let</span> formData = <span class="keyword">new</span> FormData()</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> data)&#123;</span><br><span class="line">  formData.append(key,data[key])</span><br><span class="line">&#125;</span><br><span class="line">axios.post(<span class="string">'/post'</span>,formData).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line"> <span class="built_in">console</span>.log(res)      </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p> <img src="/images/1567323056013.png" alt="1567323056013"><br> <img src="/images/1567323129124.png" alt="1567323129124"><br> <img src="/images/1567323172073.png" alt="1567323172073"> </p><h3 id="3-put-请求"><a href="#3-put-请求" class="headerlink" title="3.put 请求"></a>3.put 请求</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">axios.put(<span class="string">'/put'</span>,data).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">   <span class="built_in">console</span>.log(res)      </span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure><p><img src="/images/1567323306306.png" alt="1567323306306"><img src="/images/1567323346826.png" alt="1567323346826"></p><h3 id="4-patch"><a href="#4-patch" class="headerlink" title="4.patch"></a>4.patch</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">axios.patch(<span class="string">'/patch'</span>,data).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(res)      </span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p><img src="/images/1567323403005.png" alt="1567323403005"></p><h3 id="5-delete-2个参数"><a href="#5-delete-2个参数" class="headerlink" title="5.delete(2个参数)"></a>5.delete(2个参数)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axios.delete(url,config)</span><br></pre></td></tr></table></figure><blockquote><p>第一种</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">xios.delete(<span class="string">'/delete'</span>,&#123;</span><br><span class="line">      params:&#123;</span><br><span class="line">        id:<span class="number">12</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">axios(&#123;</span><br><span class="line">      method:<span class="string">'delete'</span>,</span><br><span class="line">      url:<span class="string">'/delete'</span>,</span><br><span class="line">      params:&#123;</span><br><span class="line">        id:<span class="number">12</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p><img src="/images/1567324364334.png" alt="1567324364334"></p><blockquote><p>第二种</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">axios.delete(<span class="string">'/delete'</span>,&#123;</span><br><span class="line">      data:&#123;</span><br><span class="line">        id:<span class="number">12</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">axios(&#123;</span><br><span class="line">      method:<span class="string">'delete'</span>,</span><br><span class="line">      url:<span class="string">'/delete'</span>,</span><br><span class="line">      data:&#123;</span><br><span class="line">        id:<span class="number">12</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p><img src="/images/1567324422875.png" alt="1567324422875"></p><h3 id="axios-all-axios-spread"><a href="#axios-all-axios-spread" class="headerlink" title="// axios.all() axios.spread()"></a>// axios.all() axios.spread()</h3><h3 id="并发请求-同时进行多个请求，并统一处理返回值"><a href="#并发请求-同时进行多个请求，并统一处理返回值" class="headerlink" title="// 并发请求:同时进行多个请求，并统一处理返回值"></a>// 并发请求:同时进行多个请求，并统一处理返回值</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">axios.all([</span><br><span class="line">      axios.get(<span class="string">'/data.json'</span>),</span><br><span class="line">      axios.get(<span class="string">'/city.json'</span>)</span><br><span class="line">    ]).then(</span><br><span class="line">      axios.spread(<span class="function">(<span class="params">dataRes,cityRes</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(dataRes,cityRes)</span><br><span class="line">      &#125;)</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> axios </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ajax </tag>
            
            <tag> axios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6中的代理对象</title>
      <link href="/2019/08/28/ES6%20%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E4%BB%A3%E7%90%86%EF%BC%88%E6%95%B0%E6%8D%AE%E4%BF%9D%E6%8A%A4%EF%BC%89/"/>
      <url>/2019/08/28/ES6%20%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E4%BB%A3%E7%90%86%EF%BC%88%E6%95%B0%E6%8D%AE%E4%BF%9D%E6%8A%A4%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="keyword">var</span> Person = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">​      <span class="keyword">var</span> data = &#123;</span><br><span class="line">​      name: <span class="string">'es3'</span>,</span><br><span class="line">​      sex: <span class="string">'male'</span>,</span><br><span class="line">​      age: <span class="number">15</span></span><br><span class="line">​    &#125;</span><br><span class="line">​    <span class="keyword">this</span>.get = <span class="function"><span class="keyword">function</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">​      <span class="keyword">return</span> data[key]</span><br><span class="line">​    &#125;</span><br><span class="line">​    <span class="keyword">this</span>.set = <span class="function"><span class="keyword">function</span>(<span class="params">key, value</span>) </span>&#123;</span><br><span class="line">​      <span class="keyword">if</span> (key !== <span class="string">'sex'</span>) &#123;</span><br><span class="line">​        data[key] = value</span><br><span class="line">​      &#125;</span><br><span class="line">​    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>//声明一个实例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = <span class="keyword">new</span> Person();</span><br></pre></td></tr></table></figure><p>  // 读取</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.table(&#123;<span class="attr">name</span>: person.get(<span class="string">'name'</span>), <span class="attr">sex</span>: person.get(<span class="string">'sex'</span>), <span class="attr">age</span>:person.get(<span class="string">'age'</span>)&#125;);</span><br></pre></td></tr></table></figure><p><img src="/images/1566981354107.png" alt="1566981354107"></p><p>  // 修改</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">person.set(<span class="string">'name'</span>, <span class="string">'es3-cname'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.table(&#123;<span class="attr">name</span>: person.get(<span class="string">'name'</span>), <span class="attr">sex</span>: person.get(<span class="string">'sex'</span>), <span class="attr">age</span>:person.get(<span class="string">'age'</span>)&#125;);</span><br></pre></td></tr></table></figure><p><img src="/images/1566981519105.png" alt="1566981519105"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">person.set(<span class="string">'sex'</span>, <span class="string">'female'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.table(&#123;<span class="attr">name</span>: person.get(<span class="string">'name'</span>), <span class="attr">sex</span>: person.get(<span class="string">'sex'</span>), <span class="attr">age</span>: person.get(<span class="string">'age'</span>)&#125;);</span><br></pre></td></tr></table></figure><p><img src="/images/1566981533339.png" alt="1566981533339"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="ES5"><a href="#ES5" class="headerlink" title="ES5"></a>ES5</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="keyword">var</span> Person = &#123;</span><br><span class="line">​    name: <span class="string">'es5'</span>, </span><br><span class="line">​    age: <span class="number">15</span></span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">Object</span>.defineProperty(Person, <span class="string">'sex'</span>, &#123;</span><br><span class="line">​    writable: <span class="literal">false</span>,</span><br><span class="line">​    value: <span class="string">'male'</span></span><br><span class="line">  &#125;);</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">console</span>.table(&#123;</span><br><span class="line">​    name: Person.name,</span><br><span class="line">​    age: Person.age,</span><br><span class="line">​    sex: Person.sex</span><br><span class="line">  &#125;);</span><br><span class="line">  </span><br><span class="line">  Person.name = <span class="string">'es5-cname'</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">console</span>.table(&#123;</span><br><span class="line">​    name: Person.name,</span><br><span class="line">​    age: Person.age,</span><br><span class="line">​    sex: Person.sex</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">​    Person.sex = <span class="string">'female'</span>;</span><br><span class="line">​    <span class="built_in">console</span>.table(&#123;</span><br><span class="line">​      name: Person.name,</span><br><span class="line">​      age: Person.age,</span><br><span class="line">​      sex: Person.sex&#125;);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">​    <span class="built_in">console</span>.log(e);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/1566981878277.png" alt="1566981878277"></p><p><em>// ES6</em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> Person = &#123;</span><br><span class="line">​    name: <span class="string">'es6'</span>,</span><br><span class="line">​    sex: <span class="string">'male'</span>,</span><br><span class="line">​    age: <span class="number">15</span></span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">let</span> person = <span class="keyword">new</span> <span class="built_in">Proxy</span>(Person, &#123;</span><br><span class="line">  </span><br><span class="line">​    <span class="keyword">get</span>(target, key) &#123;</span><br><span class="line">​      <span class="keyword">return</span> target[key]</span><br><span class="line">​    &#125;,</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">set</span>(target,key,value)&#123;</span><br><span class="line">​      <span class="keyword">if</span>(key!==<span class="string">'sex'</span>)&#123;</span><br><span class="line">​        target[key]=value;</span><br><span class="line">​      &#125;</span><br><span class="line">​    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="built_in">console</span>.table(&#123;</span><br><span class="line">​    name:person.name,</span><br><span class="line">​    sex:person.sex,</span><br><span class="line">​    age:person.age</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">​    person.sex=<span class="string">'female'</span>;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">​    <span class="built_in">console</span>.log(e);</span><br><span class="line">  &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/1566982135689.png" alt="1566982135689"></p><blockquote><ol><li>Proxy是代理</li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据保护 </tag>
            
            <tag> 代理对象 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6中的默认参数</title>
      <link href="/2019/08/28/ES6%20%E4%B8%AD%E7%9A%84%E9%BB%98%E8%AE%A4%E5%8F%82%E6%95%B0/"/>
      <url>/2019/08/28/ES6%20%E4%B8%AD%E7%9A%84%E9%BB%98%E8%AE%A4%E5%8F%82%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="ES5-ES3-默认参数的写法"><a href="#ES5-ES3-默认参数的写法" class="headerlink" title="ES5 ES3 默认参数的写法"></a>ES5 ES3 默认参数的写法</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params">x, y, z</span>) </span>&#123;</span><br><span class="line">​    <span class="keyword">if</span> (y === <span class="literal">undefined</span>) &#123;</span><br><span class="line">​      y = <span class="number">7</span>;</span><br><span class="line">​    &#125;</span><br><span class="line">​    <span class="keyword">if</span> (z === <span class="literal">undefined</span>) &#123;</span><br><span class="line">​      z = <span class="number">42</span></span><br><span class="line">​    &#125;</span><br><span class="line">​    <span class="keyword">return</span> x + y + z</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log(f(<span class="number">1</span>, <span class="number">3</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="ES6-默认参数"><a href="#ES6-默认参数" class="headerlink" title="ES6 默认参数"></a>ES6 默认参数</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params">x, y = <span class="number">7</span>, z = <span class="number">42</span></span>) </span>&#123;</span><br><span class="line">​    <span class="keyword">return</span> x + y + z</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log(f(<span class="number">1</span>, <span class="number">3</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>判断x存在吗</strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">checkParameter</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">​    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'can\'t be empty'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params">*x* = checkParameter(</span>), *<span class="title">y</span>* = 7, *<span class="title">z</span>* = 42) </span>&#123;</span><br><span class="line">​    <span class="keyword">return</span> x + y + z</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log(f(<span class="number">1</span>));</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">​    f()</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">​    <span class="built_in">console</span>.log(e);</span><br><span class="line">  &#125; <span class="keyword">finally</span> &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="ES3-ES5-可变参数"><a href="#ES3-ES5-可变参数" class="headerlink" title="ES3,ES5 可变参数"></a>ES3,ES5 可变参数</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">​    <span class="keyword">var</span> a = <span class="built_in">Array</span>.prototype.slice.call(<span class="built_in">arguments</span>);<span class="comment">//伪装转成数组进行操作</span></span><br><span class="line">​    <span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line">​    a.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>) </span>&#123;</span><br><span class="line">​      sum += item * <span class="number">1</span>; </span><br><span class="line">​    &#125;)</span><br><span class="line">​    <span class="keyword">return</span> sum</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log(f(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>)); <span class="comment">//12</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="ES6-可变参数"><a href="#ES6-可变参数" class="headerlink" title="ES6 可变参数"></a>ES6 可变参数</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params">...a</span>) </span>&#123;</span><br><span class="line">​    <span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line">​    a.forEach(*item* =&gt; &#123;</span><br><span class="line">​      sum += item * <span class="number">1</span></span><br><span class="line">​    &#125;);</span><br><span class="line">​    <span class="keyword">return</span> sum</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log(f(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>)); <span class="comment">//12</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ol><li><p>为什么使用sum += item*1 ，而非sum += item？</p><p>一个小技巧，转num</p></li></ol></blockquote><h1 id="ES5-合并数组"><a href="#ES5-合并数组" class="headerlink" title="ES5 合并数组"></a>ES5 合并数组</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="keyword">var</span> params = [<span class="string">'hello'</span>, <span class="literal">true</span>, <span class="number">7</span>];</span><br><span class="line">  <span class="keyword">var</span> other = [<span class="number">1</span>, <span class="number">2</span>].concat(params);</span><br><span class="line">  <span class="built_in">console</span>.log(other);  <span class="comment">//[1, 2, "hello", true, 7]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="ES6-利用扩展运算符合并数组"><a href="#ES6-利用扩展运算符合并数组" class="headerlink" title="ES6 利用扩展运算符合并数组"></a>ES6 利用扩展运算符合并数组</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="keyword">var</span> params = [<span class="string">'hello'</span>, <span class="literal">true</span>, <span class="number">7</span>];</span><br><span class="line">  <span class="keyword">var</span> other = [</span><br><span class="line">​    <span class="number">1</span>, <span class="number">2</span>, ...params</span><br><span class="line">  ];</span><br><span class="line">  <span class="built_in">console</span>.log(other);  <span class="comment">//[1, 2, "hello", true, 7]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 默认参数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6中的箭头函数</title>
      <link href="/2019/08/28/ES6%20%E4%B8%AD%E7%9A%84%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0/"/>
      <url>/2019/08/28/ES6%20%E4%B8%AD%E7%9A%84%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="ES3-ES5"><a href="#ES3-ES5" class="headerlink" title="ES3,ES5"></a>ES3,ES5</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="keyword">var</span> evens = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">  <span class="keyword">var</span> odds = evens.map(<span class="function"><span class="keyword">function</span>(<span class="params">v</span>) </span>&#123;</span><br><span class="line">​    <span class="keyword">return</span> v + <span class="number">1</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="built_in">console</span>.log(evens, odds);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="ES6"><a href="#ES6" class="headerlink" title="ES6"></a>ES6</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="keyword">let</span> evens = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">  <span class="keyword">let</span> odds = evens.map(<span class="function"><span class="params">v</span> =&gt;</span> v + <span class="number">1</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(evens, odds);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ol><li><p>箭头函数 function a(){</p><p>​    () =&gt; { }           </p><p> }</p></li><li><p>function(v)中的有参数直接 提出来</p></li><li><p>{}中的表达式作为返回值可以直接省略花括号</p></li></ol></blockquote><p><img src="/images/1566978448880.png" alt="1566978448880"></p><h1 id="ES3-ES5-1"><a href="#ES3-ES5-1" class="headerlink" title="ES3,ES5"></a>ES3,ES5</h1><h6 id="块作用域"><a href="#块作用域" class="headerlink" title="块作用域"></a>块作用域</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> factory = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">​    <span class="keyword">this</span>.a = <span class="string">'a'</span>;</span><br><span class="line">​    <span class="keyword">this</span>.b = <span class="string">'b'</span>;</span><br><span class="line">​    <span class="keyword">this</span>.c = &#123;</span><br><span class="line">​      a: <span class="string">'a+'</span>,</span><br><span class="line">​      b: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">​        <span class="keyword">return</span> <span class="keyword">this</span>.a</span><br><span class="line">​      &#125;</span><br><span class="line">​    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> <span class="built_in">console</span>.log(<span class="keyword">new</span> factory().c.b()); <span class="comment">//a+</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><ol><li>this的指向就是该函数被调用的对象</li><li>c 调用了 b() 所以 c 中的 a 的值就是 a+</li></ol></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="keyword">var</span> factory = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">​    <span class="keyword">this</span>.a = <span class="string">'a'</span>;</span><br><span class="line">​    <span class="keyword">this</span>.b = <span class="string">'b'</span>;</span><br><span class="line">​    <span class="keyword">this</span>.c = &#123;</span><br><span class="line">​      a: <span class="string">'a+'</span>,</span><br><span class="line">​      b: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">​        <span class="keyword">return</span> <span class="keyword">this</span>.a</span><br><span class="line">​      &#125;</span><br><span class="line">​    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">new</span> factory().c.b());  <span class="comment">//a</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ol><li>箭头函数体中<strong>this</strong>的指向是定义时<strong>this</strong>的指向</li></ol><p><strong>b</strong>定义时 <strong>this</strong> 指向 函数体中的 <strong>this</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">this</span>.a = <span class="string">'a'</span>;</span><br><span class="line">&gt; <span class="keyword">this</span>.b = <span class="string">'b'</span>;</span><br><span class="line">&gt; <span class="keyword">this</span>.c = &#123;</span><br><span class="line">&gt; ​      a: <span class="string">'a+'</span>,</span><br><span class="line">&gt; ​      b: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">&gt; ​        <span class="keyword">return</span> <span class="keyword">this</span>.a</span><br><span class="line">&gt; ​      &#125;</span><br><span class="line">&gt; ​    &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>构造函数的 <strong>this</strong> 指向 <strong>factory</strong> 构造函数的实例 <strong>new factory()</strong></p><p><strong>new factory()</strong> 的实例就是 <strong>this.a = ‘a’</strong></p><ol start="2"><li>解决this的指向不确定</li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 箭头函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6中的作用域</title>
      <link href="/2019/08/28/ES6%20%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/"/>
      <url>/2019/08/28/ES6%20%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="ES5-中作用域"><a href="#ES5-中作用域" class="headerlink" title="ES5 中作用域"></a>ES5 中作用域</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> callbacks = []</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt;= <span class="number">2</span>; i++) &#123;</span><br><span class="line">​    callbacks[i] = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">​        <span class="keyword">return</span> i * <span class="number">2</span></span><br><span class="line">​    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.table([</span><br><span class="line">​    callbacks[<span class="number">0</span>](),</span><br><span class="line">​    callbacks[<span class="number">1</span>](),</span><br><span class="line">​    callbacks[<span class="number">2</span>](),</span><br><span class="line">])</span><br></pre></td></tr></table></figure><p><img src="/images/1566975940391.png" alt="1566975940391"></p><h1 id="ES6-中作用域"><a href="#ES6-中作用域" class="headerlink" title="ES6 中作用域"></a>ES6 中作用域</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> callbacks2 = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt;= <span class="number">2</span>; j++) &#123;</span><br><span class="line">​    callbacks2[j] = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">​        <span class="keyword">return</span> j * <span class="number">2</span></span><br><span class="line">​    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.table([</span><br><span class="line">​    callbacks2[<span class="number">0</span>](),</span><br><span class="line">​    callbacks2[<span class="number">1</span>](),</span><br><span class="line">​    callbacks2[<span class="number">2</span>](),</span><br><span class="line">])</span><br></pre></td></tr></table></figure><p>  块作用域 </p><p><img src="/images/1566975957624.png" alt="1566975957624"></p><h1 id="立即执行函数"><a href="#立即执行函数" class="headerlink" title="立即执行函数"></a>立即执行函数</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">((<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">const</span> foo = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">​        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">​    &#125;</span><br><span class="line">​    <span class="built_in">console</span>.log(<span class="string">"foo()===1"</span>, foo() === <span class="number">1</span>)</span><br><span class="line">​    ;((<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">​        <span class="keyword">const</span> foo = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">​            <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">​        &#125;</span><br><span class="line">​        <span class="built_in">console</span>.log(<span class="string">"foo()===2"</span>, foo() === <span class="number">2</span>)</span><br><span class="line">​    &#125;)())</span><br><span class="line">&#125;)())</span><br></pre></td></tr></table></figure><p><img src="/images/1566976525768.png" alt="1566976525768"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">​    <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">​       <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">​    &#125;</span><br><span class="line"></span><br><span class="line">​    <span class="built_in">console</span>.log(<span class="string">"foo()===1"</span>, foo() === <span class="number">1</span>)</span><br><span class="line">​    &#123;</span><br><span class="line">​        <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">​            <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">​        &#125;</span><br><span class="line">​        <span class="built_in">console</span>.log(<span class="string">"foo()===2"</span>, foo() === <span class="number">2</span>)</span><br><span class="line">​    &#125;</span><br><span class="line">​    <span class="built_in">console</span>.log(<span class="string">"foo()===1"</span>, foo() === <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/1566976637624.png" alt="1566976637624"></p>]]></content>
      
      
      <categories>
          
          <category> ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 作用域 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6中的常量写法</title>
      <link href="/2019/08/28/ES6%20%E4%B8%AD%E5%B8%B8%E9%87%8F%E7%9A%84%E5%86%99%E6%B3%95/"/>
      <url>/2019/08/28/ES6%20%E4%B8%AD%E5%B8%B8%E9%87%8F%E7%9A%84%E5%86%99%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="ES5-中常量的写法"><a href="#ES5-中常量的写法" class="headerlink" title="ES5 中常量的写法"></a>ES5 中常量的写法</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.defineProperty(<span class="built_in">window</span>, <span class="string">"PI2"</span>, &#123;</span><br><span class="line">​    value: <span class="number">3.1415926</span>,</span><br><span class="line">​    writable: <span class="literal">false</span>,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>console.log(window.PI2)</p><h1 id="ES6-的常量写法"><a href="#ES6-的常量写法" class="headerlink" title="ES6 的常量写法"></a>ES6 的常量写法</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> PI = <span class="number">3.1415926</span></span><br></pre></td></tr></table></figure><p>console.log(PI)</p>]]></content>
      
      
      <categories>
          
          <category> ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常量写法 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
